#! @PERL@
# -*- Perl -*-
# @configure_input@

eval 'case $# in 0) exec @PERL@ -S "$0";; *) exec @PERL@ -S "$0" "$@";; esac'
    if 0;

# Convert an ASCII text into the declaration of a C++ array.
# Copyright (C) 2001-2009 Roberto Bagnara <bagnara@cs.unipr.it>
#
# This file is part of the Parma Polyhedra Library (PPL).
#
# The PPL is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# The PPL is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1307, USA.
#
# For the most up-to-date information see the Parma Polyhedra Library
# site: http://www.cs.unipr.it/ppl/ .

use Getopt::Long;

sub usage {
	print STDERR <<EOF;
Convert ASCII text into the declaration of a C++ array.
Usage: text2cxxarray [OPTIONS] [FILE ...]
  [FILE ...]                  ASCII text file(s) to convert.

  [OPTIONS]
    --name=NAME               Use NAME as the array name.
    -h, --help                Display this help message.
EOF
        exit 1;
}

my $array_name = "a";

GetOptions(
	'name=s' => \$array_name,
	'help|h' => \&usage,
) || usage();

print "extern const char* const $array_name" . "[] = {\n";
while (<>) {
    chop;
    s/\\/\\\\/g;
    s/\t/\\t/g;
    s/\"/\\"/g;
    print "  \"$_\",\n";
}
print "  0";
print "};\n";
