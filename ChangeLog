2001-11-13 Tuesday 21:27  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/Prolog_interface.dox (1.12): Use `| ?-'
	everywhere a goal is introduced.

2001-11-13 Tuesday 21:16  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/Prolog_interface.dox (1.11): `E.g.' and `i.e.'
	must always be followed by comma.  There are no exceptions to this
	rule.

2001-11-13 Tuesday 18:14  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/Prolog_interface.dox (1.10): Documentation for
	ppl_add_consraints_and _minimize and for ppl_copy_polyhedron added.
	 Two examples for ppl_insert_constraints added that compare with
	examples for those for ppl_add_consraints_and_minimize. 
	Introductory sentence added.  "To be written"  replaced by "Support
	for XXX ...future release."

2001-11-13 Tuesday 17:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* README (1.8): Updated for release 0.2.

2001-11-13 Tuesday 17:29  Roberto Bagnara <bagnara@cs.unipr.it>

	* configure.ac (1.15): Version number bumped to 0.2.

2001-11-13 Tuesday 17:21  Roberto Bagnara <bagnara@cs.unipr.it>

	* NEWS (1.4): PPL 0.2 will be released on November 14, 2001.

2001-11-13 Tuesday 16:48  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/Makefile.am (1.5): Packaging issues
	solved.

2001-11-13 Tuesday 15:48  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: Makefile.am (1.4), check_script
	(1.1), expected (1.1): Use the meta-interpreter for `make check'.

2001-11-13 Tuesday 15:47  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.24): reconsult(File) command
	fixed.

2001-11-13 Tuesday 15:04  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_check.pl (1.7): Gone, at last.

2001-11-13 Tuesday 15:03  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.23): Legalese added.

2001-11-13 Tuesday 10:02  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.22): Better support for
	debugging.  Now the `spy' command works as expected by most Prolog
	users.

2001-11-13 Tuesday 09:20  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/tak.clpq (1.1): New test program.

2001-11-13 Tuesday 09:20  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ack.clpq (1.3), ackn.clpq (1.1):
	ack.clpq is the original version whereas ackn.clpq is the
	normalized version.

2001-11-12 Monday 22:33  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.21): Fixed a bug whereby
	original_goal_variables/1 was not retracted in some cases. 
	Multiple clauses for original_goal_variables/1 were causing the use
	of already discarded polyhedra.

2001-11-12 Monday 22:31  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.25): When compiled
	with run-time assertions switched on, the interface now checks that
	the Prolog caller is not messing around with Polyhedron's
	addresses.

2001-11-12 Monday 17:42  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.20): Use
	ppl_add_constraints_and_minimize/2 instead of adding one constraint
	at a time and then checking for emptiness.

2001-11-12 Monday 17:41  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_sicstus.cc (1.24), ppl_sicstus.pl
	(1.15): New interface predicate ppl_add_constraints_and_minimize/2.

2001-11-12 Monday 16:57  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.19): Fixed bug in
	read_clauses/1: now unit clauses are read correctly.

2001-11-12 Monday 16:48  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.18): The meta-interpreter
	core has been rewritten.  Computed answer constraints are also
	output in a readable way with variables named as in the original
	goal.

2001-11-12 Monday 16:44  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/Prolog_interface.dox (1.9): General
	improvements throughout the file.

2001-11-12 Monday 09:23  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/Prolog_interface.dox (1.8): A linear expression
	for defining constraints or generators can only have integer
	coefficients.  Therefore division by a number is not allowed and
	option removed from the grammar rules.	Also a number can multiply
	a PPL variable but not an arbitrary linear expression.

2001-11-11 Sunday 18:19  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.guess (1.3), config.sub (1.3): Updated.

2001-11-11 Sunday 18:18  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/Makefile.am (1.3): Missing dependency
	added: pplsp depends on the library.  Do not assume `.' is in PATH.

2001-11-11 Sunday 17:31  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Constraint.defs.hh (1.27), Constraint.inlines.hh (1.11),
	Generator.defs.hh (1.29), Generator.inlines.hh (1.15), Row.defs.hh
	(1.14): std::swap() specialized both for Constraint and Generator. 
	Less verbose comments for such a simple operation.

2001-11-11 Sunday 17:29  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/GenSys.cc (1.23): Spurious assertions removed.

2001-11-11 Sunday 17:27  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: ConSys.defs.hh (1.28), ConSys.inlines.hh (1.9), GenSys.cc
	(1.22), GenSys.defs.hh (1.38), GenSys.inlines.hh (1.9):
	ConSys::swap() and GenSys::swap() removed: they are inherited from
	Matrix.  GenSys::remove_invalid_lines_and_rays() implemented.

2001-11-11 Sunday 16:03  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: GenSys.cc (1.21), GenSys.defs.hh (1.37), Polyhedron.cc
	(1.86): Use Constraint::trivial_true() and
	Constraint::trivial_false().  Prepare to remove invalid line and
	rays from a GenSys.  This is necessary in the
	Polyhedron::remove_...() methods.

2001-11-11 Sunday 16:01  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/ConSys.cc (1.20): Use Constraint::is_trivial_true().

2001-11-11 Sunday 15:43  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Generator.cc (1.9), Generator.defs.hh (1.28): Added `bool
	Generator::OK() const'.

2001-11-11 Sunday 15:40  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Constraint.cc (1.9), Constraint.defs.hh (1.26):
	Constraint::is_trivial() renamed is_trivial_true(). 
	Constraint::is_unsatisfiable() renamed is_trivial_false().  Both
	now use Row::all_homogeneous_terms_are_zero().

2001-11-11 Sunday 15:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Row.cc (1.13), Row.defs.hh (1.13): Added `bool
	Row::all_homogeneous_terms_are_zero() const'.

2001-11-11 Sunday 12:05  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.85): All other things being equal, prefer
	pre-increment/decrement to post-increment/decrement.

2001-11-10 Saturday 20:51  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: append1.cc (1.7), append2.cc (1.8), permute.cc (1.11):
	Infamous relops are already neutralized in ppl_install.hh.

2001-11-09 Friday 19:49  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.29), smm1.cc (1.1): New test program.

2001-11-09 Friday 18:28  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.17): Now clpq.pl does not
	require the lists module.

2001-11-09 Friday 17:45  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.16): Now a vertex is
	inserted before any lines or rays.  This avoids a bug when
	inserting generators into the empty polyhedron.

2001-11-09 Friday 16:21  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.15): Now the interpreter
	answers "yes" or "no".	The listing/0 command has been improved.

2001-11-09 Friday 15:50  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Matrix.cc (1.17), Matrix.defs.hh (1.9), Polyhedron.cc
	(1.84), Row.cc (1.12), Row.defs.hh (1.12), conversion.cc (1.10):
	Another go at smart memory allocation.

2001-11-09 Friday 15:49  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/addconstraints2.cc (1.4): Catch standard exceptions.

2001-11-09 Friday 14:22  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/Prolog_interface.dox (1.7): Corrections and
	improvements as suggested by Enea implemented.	Other corrections
	done and examples added.

2001-11-09 Friday 13:19  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.14): Now there are no calls
	to the ppl_convex_hull_assign operation.  This version keeps the
	list of generators and uses that to recover from failure paths.

2001-11-09 Friday 08:48  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.13): Now many of the
	unwanted temporary copies of polyhedra are deleted earlier.

2001-11-08 Thursday 22:23  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/Prolog_interface.dox (1.6): More detailed
	specification of the interface predicates with many examples added.
	 Introduction includes grammar rules and list of some important
	issues wrt using the PPL in Prolog.

2001-11-08 Thursday 17:37  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.12): Each constraint output
	on a new line.

2001-11-08 Thursday 15:32  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/ppl_sicstus.pl (1.14): Comment
	containing documentation removed.

2001-11-08 Thursday 15:30  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.11): The main polyhedron is
	now deleted when solve(goal) fails.

2001-11-08 Thursday 12:52  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.10): Unwanted polyhedra are
	deleted now when calls to solve/7 fail.

2001-11-08 Thursday 11:37  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Matrix.cc (1.16): Matrix::resize_no_copy() now deals with the
	case where the vector of rows must be reallocated.

2001-11-08 Thursday 10:34  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/Prolog_interface.dox (1.5): Detailed predicate
	descriptions drafted for SICStus Prolog.

2001-11-08 Thursday 08:33  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.9): Some improvements to the
	efficiency by replacing calls to member/2 by member_check/2 and by
	reducing the number of calls to ppl_check_empty.  Also,
	numbervars/3 replaced by numvars/3 defined within clpq.pl.

2001-11-07 Wednesday 13:38  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/ppl_sicstus.pl (1.13): First draft of
	documentation for ppl_sicstus.pl the interface for Prolog.

2001-11-07 Wednesday 11:20  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.8): This version tries to
	reduce the amount of memory leakage between requests for more
	solutions and between tests.

2001-11-06 Tuesday 16:55  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.7): More small improvements
	made.

2001-11-06 Tuesday 16:04  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/: ack.clpq (1.2), clpq.pl (1.6):
	clpq.pl: The comments have been corrected and	       some
	simplifications to the code.  ack.clpq: A bug in the second clause
	corrected.

2001-11-06 Tuesday 15:20  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/clpq.pl (1.5): Temporary version. This
	is working but needs commenting and further checking.

2001-11-05 Monday 11:36  Elisa Ricci <ericci@cs.unipr.it>

	* src/ConSys.cc (1.19), src/ConSys.defs.hh (1.27), src/GenSys.cc
	(1.20), src/GenSys.defs.hh (1.36), src/Polyhedron.cc (1.83),
	src/Polyhedron.defs.hh (1.64), tests/affinetrans.cc (1.5),
	tests/error2.cc (1.8): Changed the name of some functions:
	Polyhedron::assign_variable --> Polyhedron::affine_image
	Polyhedron::substitute_variable --> Polyhedron::affine_preimage
	GenSys::assign_variable --> GenSys::affine_image
	ConSys::substitute_variable --> ConSys::affine_preimage The new
	names are used in the examples and in the tests.

2001-11-05 Monday 10:49  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/smm.clpq (1.1): A new example program.

2001-11-05 Monday 09:57  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.82): At the end of the functions
	Polyhedron::add_dimensions_and_project and
	Polyhedron::add_dimensions_and_constraints, we can have an empty
	polyhedron without the flag EMPTY sets: so, the assertion OK() is
	modified not to verify if the system of constraints is satisfiable.

2001-11-05 Monday 09:00  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ack.clpq (1.1), fib.clpq (1.1),
	mc91.clpq (1.1), sumto.clpq (1.1): Small programs to test clpq.pl.

2001-11-05 Monday 08:57  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.81): The final OK() assertion of
	Polyhedron::add_dimensions_and_embed() has been modified so as to
	allow for empty polyhedra.  Needs checking.  A similar analysis
	must be conducted on Polyhedron::add_dimensions_and_project().

2001-11-05 Monday 08:29  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.4): Let `.clpq' be the
	default extension.

2001-11-05 Monday 07:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Makefile.am (1.17), Matrix.cc (1.15), Matrix.inlines.hh
	(1.7), Row.defs.hh (1.11), Row.inlines.hh (1.8), globals.hh (1.3):
	Speculative memory allocation is now completely implemented.  The
	function `size_t compute_capacity(size_t requested_size)' is now in
	namespace scope, since it is used both for Row's and for Matrix
	columns.  Its current implementation (2*(requested_size+1)) is to
	be considered experimental.

2001-11-04 Sunday 22:18  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/definitions.dox (1.34): Doxygen no longer causes a spurious
	string of characters in the user manual.

2001-11-04 Sunday 22:16  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Matrix.cc (1.14): In Matrix(const Matrix& y) the right
	row-capacity is computed for the copy.

2001-11-04 Sunday 19:11  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Matrix.cc (1.13): The methods Matrix::add_row(...) are now
	careful with respect to reallocation of the `rows' vector.  The
	stage is now ready for speculative memory allocation.

2001-11-04 Sunday 19:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Constraint.defs.hh (1.25), Constraint.inlines.hh (1.10),
	Polyhedron.cc (1.80): Added and used `const Constraint&
	Constraint::zero_dim_positivity()'.

2001-11-04 Sunday 15:59  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.79): In functions
	Polyhedron::update_constraints and Polyhedron::update_generators we
	only have a saturation matrix up-to-date: so, we must say that the
	other is not up-to-date.  In function Polyhedron::assign_variable,
	if the transformation is not invertible, we must have the system of
	generators up-to-date, and then if the polyhedron is non-empty, we
	use the function GenSys::assign_variable to find the resulting
	polyhedron. so, we always modify the polyhedron (we do not modify
	the polyhedron if it is empty or if there are dimensional
	problems).

2001-11-04 Sunday 15:28  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.78): Polyhedron::remove_...() methods
	improved.

2001-11-04 Sunday 12:56  Elisa Ricci <ericci@cs.unipr.it>

	* src/Matrix.cc (1.12): A wrong comment erased: it is not true that
	the Row::linear_combine changes the flag `sorted' of the matrix.

2001-11-04 Sunday 12:22  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.77): In functions
	Polyhedron::assign_variable and Polyhedron::substitute_variable we
	must clear the flags SAT_C_UP_TO_DATE and SAT_G_UP_TO_DATE, because
	after the operations the polyhedron is changed.

2001-11-04 Sunday 12:01  Elisa Ricci <ericci@cs.unipr.it>

	* src/Matrix.cc (1.11): In function Matrix::gauss(), we change a
	row without changing "changed" that indicates that the matrix is
	changed: so the flag "sorted" of the matrix was true even if the
	matrix was not sorted.

2001-11-04 Sunday 10:25  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.23):
	ppl_intersection_assign/2 calls Polyhedron::intersection_assign().

2001-11-04 Sunday 09:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: ConSys.cc (1.18), GenSys.cc (1.19), Makefile.am (1.16),
	Matrix.cc (1.10), Matrix.defs.hh (1.8), Matrix.inlines.hh (1.6),
	Polyhedron.cc (1.76), Row.cc (1.11), Row.defs.hh (1.10),
	Row.inlines.hh (1.7), SatRow.inlines.hh (1.6), conversion.cc (1.9),
	globals.cc (1.2), globals.hh (1.2), minimize.cc (1.6): OK() methods
	changed to allow for ConSys and GenSys with a single column.
	
	Temporary Integer's now incapsulated into a function: the source
	globals.cc is no longer necessary.
	
	The funcionality of Matrix::compute_row_capacity() is now provided
	by Row::compute_capacity().
	
	Tracking of capacity improved (there are still several problems
	though).  Matrix::sort_rows() rewritten: the STL algorithms keep
	the freedom of making copies of rows and we cannot accept that.
	
	Temporaty kludges added to the Matrix::add_row() methods: if the
	rows vector must grow, the implementation will copy the rows
	changing their capacity.  A proper solution to this problem must be
	found.
	
	OK() safety checks added tp Polyhedron::remove_dimensions() and
	Polyhedron::remove_higher_dimensions().
	
	Polyhedron::remove_dimensions() and
	Polyhedron::remove_higher_dimensions() where not clearing the
	"generators are minimized" flag.  With this change the flag is
	cleared a bit too often.  A proper solution must be found.
	
	Polyhedron::remove_dimensions() and
	Polyhedron::remove_higher_dimensions() now use
	Matrix::resize_no_copy() instead of Matrix::resize() in order to
	shrink matrices.
	
	Row::OK() added and used.  When compiling with assertions each rows
	brings its own capacity in the capacity_ flag.	The consistency of
	this information is checked by Row::OK() which, in turn, is called
	by Matrix::OK() for each row of the matrix.  For internal use, the
	capacity_ field can be accessed by `size_t Row::capacity() const'.
	
	`void Row::assign(Row& y)' added to assign the implementation of y
	to *this.
	
	`std::iter_swap()' specialized both for vector<Row> and
	vector<SatRow>.

2001-11-04 Sunday 08:50  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.28), bug2.cc (1.1): bug2.cc shows a
	problem whereby we do not correctly keep track of the status of
	saturation matrices.

2001-11-04 Sunday 08:29  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.27), bug1.cc (1.1): bug1.cc shows a
	problem with the tracking of matrix sortedness.

2001-11-03 Saturday 17:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/append1.cc (1.6): Two assertions added: they prove that
	Polyhedron::remove_dimensions() is broken.

2001-11-03 Saturday 13:49  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.defs.hh (1.26), GenSys.defs.hh (1.35): "no guarantee
	at all" changed into "no guarantees" as suggested by Pat.

2001-11-03 Saturday 10:45  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.75): In a comment correct an error: there
	was "systemo" instead of "system".

2001-11-03 Saturday 10:40  Elisa Ricci <ericci@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.22),
	src/Polyhedron.cc (1.74), src/Polyhedron.defs.hh (1.63),
	tests/inters1.cc (1.7), tests/inters2.cc (1.9): The function
	Polyhedron::intersection_assign now is
	Polyhedron::intersection_assign_and_minimize.  Added a new function
	Polyhedron::intersection_assign that computes the intersection
	between x and y without minimizing the result.

2001-11-02 Friday 17:55  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.3): Use
	ppl_remove_higher_dimensions/2.

2001-11-02 Friday 17:54  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_sicstus.cc (1.21), ppl_sicstus.pl
	(1.12): Added ppl_remove_higher_dimensions/2.

2001-11-02 Friday 17:53  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Polyhedron.cc (1.73), Polyhedron.defs.hh (1.62): New method
	drafted: void Polyhedron::remove_higher_dimensions(size_t
	new_dimension).

2001-11-02 Friday 17:22  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.72), src/Polyhedron.defs.hh (1.61),
	tests/addconstraints1.cc (1.2), tests/append1.cc (1.5),
	tests/append2.cc (1.7), tests/error3.cc (1.8), tests/permute.cc
	(1.10): The Polyhedron::add_constraints now is
	Polyhedron::add_constraints_and_minimize, while
	Polyhedron::add_constraints_lazy now is only
	Polyhedron::add_constraints.  The Polyhedron::convex_hull_assign
	now is Polyhedron::convex_hull_assign_and_minimize, while
	Polyhedron::convex_hull_assign_lazy now is
	Polyhedron::convex_hull_assign.

2001-11-02 Friday 16:48  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/clpq.pl (1.2): Some infrastructure
	added to simplify loading programs and trying them.

2001-11-02 Friday 15:18  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.33), src/ConSys.defs.hh (1.25),
	src/Constraint.defs.hh (1.24), src/GenSys.defs.hh (1.34),
	src/Generator.defs.hh (1.27), src/LinExpression.defs.hh (1.20),
	src/Polyhedron.defs.hh (1.60): A further scan on almost all user
	documentation in order to better comment on space-dimensionality
	checks.

2001-11-02 Friday 14:09  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: clpq.pl (1.1), solve.pl (1.19):
	Renamed.

2001-11-02 Friday 14:00  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Matrix.cc (1.9): Matrix::resize_no_copy() improved.  It now
	preserves the sortedness flag in the easy cases.

2001-11-02 Friday 13:28  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.18): Comments added
	throughout.

2001-11-02 Friday 09:01  Elisa Ricci <ericci@cs.unipr.it>

	* src/Row.cc (1.10): In a comment of operator *(Row, Row) used
	"dimension-compatible", instead of "dimension-compatibility".

2001-11-02 Friday 08:24  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.17): An improved version of
	the interpreter. This is a bit faster.

2001-11-01 Thursday 19:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/Makefile.am (1.26): Link the GMP library after the PPL.

2001-11-01 Thursday 19:04  Roberto Bagnara <bagnara@cs.unipr.it>

	* configure.ac (1.14): The --with-cc configure option has been
	fixed (it affected CXX instead of CC).

2001-11-01 Thursday 18:08  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.16): Now only use the
	copied polyhedron when trying a clause.

2001-11-01 Thursday 17:27  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.15): Bug is fixed and test
	added to check bug is dead.  Also, more care is taken to remove
	polyhedron that are no longer needed.

2001-11-01 Thursday 15:44  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.14): Now, delete_polyhedron
	is used when the call to solve((A,B)...) fails as well as when it
	succeeds.

2001-11-01 Thursday 15:36  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.17), GenSys.cc (1.18), Row.cc (1.9),
	Row.defs.hh (1.9): Erased the function projected_scalar_prod(x, y)
	and used instead of it the operator * that it is changed to support
	also the case of x.size() < y.size (operator * so can be used in
	the case x.size <= y.size).  The functions
	GenSys::satisfy(Constraint) and
	ConSys::satisfies_all_constraints(Generator) are modified to use
	only the operator *.

2001-11-01 Thursday 14:34  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.13): Names of terms made
	more descriptive.

2001-11-01 Thursday 14:04  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Matrix.cc (1.8), Matrix.inlines.hh (1.5),
	Polyhedron.inlines.hh (1.10), Row.cc (1.8), Row.defs.hh (1.8),
	SatMatrix.defs.hh (1.8), SatMatrix.inlines.hh (1.5), SatRow.defs.hh
	(1.8), SatRow.inlines.hh (1.5), Status.cc (1.8), Status.defs.hh
	(1.10), Status.inlines.hh (1.4), Variable.inlines.hh (1.4): Using
	the \related doxygen command everywhere appropriate (but not using
	it for specialization of std::swap functions).	All inline
	functions enclosed in namespace delimiters: removed redundant
	namespace qualifiers accordingly.

2001-11-01 Thursday 13:53  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.12): Now temporary
	polyhedra are deleted when they are no longer needed.

2001-11-01 Thursday 13:04  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.11): Old code for
	ppl_renew_polyhedron that does not use ppl_delete_polyhedron has
	been restored.

2001-11-01 Thursday 11:49  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.10): Now all but the head
	variables are projected away.  Other general improvements and
	corrections done.

2001-11-01 Thursday 10:42  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Matrix.defs.hh (1.7), Polyhedron.cc (1.71), Row.defs.hh
	(1.7), Row.inlines.hh (1.6): Using the \relates doxygen command for
	Row and Matrix.  Enclosing inline functions in the namespace
	delimiters.  Avoiding useless namespace qualifiers.

2001-11-01 Thursday 07:48  Roberto Bagnara <bagnara@cs.unipr.it>

	* NEWS (1.3): Drafted.

2001-10-31 Wednesday 22:32  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.20): Removed
	false_constraint_term(): it is no longer needed.

2001-10-31 Wednesday 22:31  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_sicstus.cc (1.19), ppl_sicstus.pl
	(1.11), solve.pl (1.9): ppl_copy_polyhedron/2 is now provided by
	the interface.

2001-10-31 Wednesday 22:09  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.18): In
	ppl_get_constraints/2, no longer treat empty polyhedra specially. 
	get_generator() renamed generator_term().

2001-10-31 Wednesday 21:29  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.17): In
	ppl_get_generators/2, no longer abort if the polyhedron is
	zero-dimensional.

2001-10-31 Wednesday 21:22  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.defs.hh (1.23), Generator.defs.hh (1.26),
	Polyhedron.defs.hh (1.59), Variable.defs.hh (1.10): Exploiting the
	doxygen special command \relates to put the documentation of
	non-friend functions inside the documentation of the related class.

2001-10-31 Wednesday 21:20  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.16): All C++
	exceptions are now handled and translated into Prolog exceptions.

2001-10-31 Wednesday 18:25  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Matrix.cc (1.7), Polyhedron.cc (1.70): Now, the function
	merge_row_assign resizes the second matrix if it is necessary: it
	means that in functions add_constraints_lazy and
	limited_widening_assign we do not resize the matrix cs.  In
	Polyhedron::OK the check of the number of columns is not necessary.

2001-10-31 Wednesday 15:37  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.69): In function Polyhedron::OK() the case
	of is_empty == true is considered.

2001-10-31 Wednesday 14:45  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.8): Now, backtracking works
	for some queries including fibonacci.  Also it works with a test
	that checks deeper backtracking.

2001-10-31 Wednesday 14:36  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.68): In the checking function OK, we were
	forgetting return or jump to the appropriate code after having
	checked the correctness of a 0-space dim polyhedron.

2001-10-31 Wednesday 12:52  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.67): A missing "return" added inside
	"add_dimensions_and_constraints".

2001-10-31 Wednesday 12:10  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.58): Added specification for
	add_dimensions_and_constraints(ConSys& cs).

2001-10-31 Wednesday 11:52  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.66): In functions
	Polyhedron::widening_assign and Polyhedron::limited_widening_assign
	considered the case of the polyhedra in a zero-dimensional space. 
	In function Polyhedron::limited_widening_assign considered the case
	of cs.space_dimension() < space_dimension().

2001-10-31 Wednesday 11:32  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/GenSys.defs.hh (1.33): Added an example where a system of
	generators is printed by using more features of the STL.

2001-10-31 Wednesday 11:26  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.65): When the user invokes
	Polyhedron::constraints() on an empty polyhedron, we now return the
	inconsistent constraint of the right dimension.  This also implies
	that a polyhedron with the EMPTY flag set can still have a
	non-empty con_sys; therefore, we clear the con_sys whenever we
	change the dimension of an empty polyhedron.

2001-10-31 Wednesday 10:28  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.16), Polyhedron.cc (1.64): In functions
	Polyhedron::includes and ConSys::satisfies_all_constraints the
	cases of a polyhedron in a zero-dimensional space and of
	g.space_dimension < space_dimension are considered.

2001-10-31 Wednesday 09:56  Elisa Ricci <ericci@cs.unipr.it>

	* src/: GenSys.cc (1.17), Polyhedron.cc (1.63), Row.cc (1.7),
	Row.defs.hh (1.6): The function projected_scalar_prod() moved in
	`namespace Parma_Polyhedra_Library'.  The case of c.space_dimension
	< polyhedron.space_dimension is considered in functions
	Polyhedron::satisfies and GenSys::satisy.  In function
	Polyhedron::satisfies the cases of empty polyhedron and of the
	polyhedron is a zero-dimensional space are considered.

2001-10-31 Wednesday 08:47  Elisa Ricci <ericci@cs.unipr.it>

	* src/LinExpression.defs.hh (1.19): The copy-constructor of a
	linear expression with a specified dimension is PPL_INTERNAL and
	not public.

2001-10-30 Tuesday 22:01  Elisa Ricci <ericci@cs.unipr.it>

	* tests/affinetrans.cc (1.4): We can use the linear expression `x +
	4' instead of `x + 0*y + 4'.

2001-10-30 Tuesday 21:57  Elisa Ricci <ericci@cs.unipr.it>

	* src/: LinExpression.defs.hh (1.18), Polyhedron.cc (1.62): In
	functions Polyhedron::assign_variable and
	Polyhedron::substitutte_variable considered the cases of an empty
	polyhedron and of space_dimension of linear expression <
	space_dimension of polyhedron.	In LinExpression the
	copy-constructor with the size of the new linear expression is now
	public.

2001-10-30 Tuesday 18:50  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.cc (1.8), Constraint.defs.hh (1.22): Added
	PPL_INTERNAL method Constraint::is_unsatisfiable().

2001-10-30 Tuesday 18:01  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.7): Now it allows for
	constants in the head.

2001-10-30 Tuesday 17:41  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.6): The interpreter now
	accepts repeated variables in the head.

2001-10-30 Tuesday 17:39  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.61), src/Polyhedron.defs.hh (1.57),
	tests/addconstraints2.cc (1.3): Method
	add_dimensions_and_constraints_lazy renamed as
	add_dimensions_and_constraints; signature changed (the argument is
	no longer const); in the implementation, we swap coefficients
	instead of copying them.

2001-10-30 Tuesday 15:54  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Row.cc (1.6), Row.defs.hh (1.5): Added the function Integer
	projected_scalar_prod(const Row&, const Row&).

2001-10-30 Tuesday 15:32  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/Polyhedron.defs.hh (1.56): Spelling of "poject" to "project"
	changed.

2001-10-30 Tuesday 15:17  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.60): Spelling error corrected in an output
	message; for consistency, try always to use the
	dimension-compatibility concept in error messages.

2001-10-30 Tuesday 15:12  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.5): Adjusted to allow for =
	instead of == for equality.

2001-10-30 Tuesday 14:56  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: LinExpression.defs.hh (1.17), LinExpression.inlines.hh
	(1.6): Added method space_dimension.

2001-10-30 Tuesday 14:54  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.55): We do not have any exception if we
	use the function Polyhedron::constraints() with an empty polyhedron
	of the function Polyhedron::generators() with a zero-dimensional
	polyhedron.

2001-10-30 Tuesday 14:47  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.15): Use '='/2
	instead of '=='/2 to denote equality.  Fixed a bug whereby the sign
	of the inhomogeneous term of constraints was inverted.

2001-10-30 Tuesday 14:40  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.59): Started using the methods
	space_dimension() of classes Constraint, Generator, ConSys and
	GenSys.

2001-10-30 Tuesday 14:30  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.58): In functions Polyhedron::insert used
	the function space_dimension() (of a constraint or of a generator)
	instead of size() - 1.

2001-10-30 Tuesday 13:25  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.4): More improvements.

2001-10-30 Tuesday 12:26  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.defs.hh (1.24), ConSys.inlines.hh (1.8),
	GenSys.defs.hh (1.32), GenSys.inlines.hh (1.8): Added method
	space_dimension() to both ConSys and GenSys.

2001-10-30 Tuesday 12:25  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.57): In function
	add_dimensions_and_constraints_lazy, if we are lazy we only say
	that the system of constraints is not sorted, otherwise we sort the
	system of constraints.

2001-10-30 Tuesday 12:17  Elisa Ricci <ericci@cs.unipr.it>

	* tests/addconstraints2.cc (1.2): Changed the second system of
	constraints (ConSys c2) to have a non-empty polyhedron.

2001-10-30 Tuesday 12:08  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.56): insert(const Generator&) improved.

2001-10-30 Tuesday 11:56  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.3): Now upgraded to accept
	user predicates as well as constraints.

2001-10-30 Tuesday 11:47  Elisa Ricci <ericci@cs.unipr.it>

	* tests/: Makefile.am (1.25), addconstraints2.cc (1.1): Added the
	test for the function add_dimensions_and_constraints_lazy.

2001-10-30 Tuesday 11:39  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.55): In add_constraints, after adding NO
	constraints at all we still need to check for the emptyness of the
	polyhedron.  In insert(const Constraint&), adjusted assertions and
	added triviality check when inserting into a zero-dim space
	polyhedron.

2001-10-30 Tuesday 11:29  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.54), Polyhedron.defs.hh (1.54): Added the
	function add_dimensions_and_constraints_lazy(const ConSys& cs).

2001-10-30 Tuesday 11:05  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.53): In add_constraints(_lazy), if a
	zero-dim space polyhedron is considered, using ConSys iterators to
	see if an inconsistent polyhedron is created.

2001-10-30 Tuesday 10:54  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/: Makefile.am (1.24), addconstraints1.cc (1.1): Added test
	for the addition of consistent and inconsistent zero-dim
	constraints to a zero-dim space polyhedron.  Tests re-ordered
	alphabetically.

2001-10-30 Tuesday 10:32  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.2): Some small bugs fixed.

2001-10-30 Tuesday 10:16  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/: Makefile.am (1.23), removedim3.cc (1.1): Added simple
	test on the removal of dimensions from an empty polyhedron.

2001-10-30 Tuesday 09:45  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Polyhedron.cc (1.52), Polyhedron.defs.hh (1.53): BE_LAZY
	used also in Polyhedron::add_dimensions_and_project.  A couple of
	assertions added and old code (already commented out) removed.

2001-10-30 Tuesday 09:07  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* interfaces/Prolog/SICStus/solve.pl (1.1): A first start/attempt
	at a simple meta-interpreter for CLP(Q).  There is a bug to be
	fixed.

2001-10-29 Monday 21:20  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.51): Be lazy.

2001-10-29 Monday 21:18  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: conversion.cc (1.8), minimize.cc (1.5), simplify.cc (1.6):
	Comments fixed: the class is called Polyhedron, not Poly.

2001-10-29 Monday 18:26  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.14): Use
	Constraint/Generator::space_dimension() instead of the no longer
	existing last_variable().

2001-10-29 Monday 16:47  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.defs.hh (1.21), Constraint.inlines.hh (1.9),
	Generator.defs.hh (1.25), Generator.inlines.hh (1.14): Removed
	methods last_variable() and added method space_dimension() to
	Constraint and Generator.

2001-10-29 Monday 16:46  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.50): In Polyhedron(size_t num_dimensions,
	Degenerate_Kind kind) if we build an universe polyhedron the system
	of constraints is in the minimal form.	In the function
	insert(Constraint) added the comment that specify why when we
	insert the constraint the polyhedron is non-empty.

2001-10-29 Monday 16:30  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.cc (1.15), Constraint.cc (1.7), Constraint.defs.hh
	(1.20): Constraint::is_non_trivial() transformed into
	Constraint::is_trivial().  Btw, the old evrsion was still wrong.

2001-10-29 Monday 16:26  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.49): In function add_constraints,
	add_constraints_lazy and add_generators the case of
	cs(gs)_num_columns == 1 && space_dimension() == 0 is considered.

2001-10-29 Monday 16:17  Roberto Bagnara <bagnara@cs.unipr.it>

	* missing (1.3): Updated.

2001-10-29 Monday 14:59  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Constraint.cc (1.6): Constraint::is_nontrivial() fixed.

2001-10-29 Monday 14:29  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.48): In add_dimensions_and_embed, when
	embedding a zero-dim universe polyhedron the creation of the system
	of generators is now guarded by pre-proc flag BE_LAZY.

2001-10-29 Monday 13:33  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: GenSys.cc (1.16), GenSys.defs.hh (1.31), GenSys.inlines.hh
	(1.7), Polyhedron.cc (1.47): Added static member function
	GenSys::zero_dim_univ() to replace static member
	GenSys::zero_dim_univ. All inline functions enclosed in the
	namespace.

2001-10-29 Monday 13:23  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Generator.cc (1.8), Generator.defs.hh (1.24),
	Generator.inlines.hh (1.13): Added static member function
	Generator::zero_dim_vertex().  Functions vertex, ray and line are
	no longer inlined; for ray and line we now check that the argument
	does not represent the origin of the space.

2001-10-29 Monday 13:11  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/ConSys.defs.hh (1.23): Must include <iterator>.

2001-10-29 Monday 12:59  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.cc (1.14), ConSys.defs.hh (1.22), ConSys.inlines.hh
	(1.7), Polyhedron.cc (1.46): Added static member function
	ConSys::zero_dim_empty().

2001-10-29 Monday 12:37  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.cc (1.5), Constraint.defs.hh (1.19),
	Constraint.inlines.hh (1.8): Added static memebr function
	Constraint::zero_dim_false().  All inline functions enclosed in the
	namespace.

2001-10-29 Monday 12:35  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: LinExpression.cc (1.5), LinExpression.defs.hh (1.16),
	LinExpression.inlines.hh (1.5): Added static member function
	LinExpression::zero() in place of static member LinExpression zero.
	 All inline functions enclosed in the scope of namespace.

2001-10-29 Monday 11:12  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.45): Polyhedron::Polyhedron(GenSys& gs)
	improved.

2001-10-29 Monday 10:21  Roberto Bagnara <bagnara@cs.unipr.it>

	* configure.ac (1.13): Require autoconf 2.52e.

2001-10-29 Monday 10:18  Elisa Ricci <ericci@cs.unipr.it>

	* tests/: affinetrans.cc (1.3), append2.cc (1.6), empty1.cc (1.5),
	error1.cc (1.6), error2.cc (1.7), error3.cc (1.7), error4.cc (1.3),
	error5.cc (1.4), inters1.cc (1.6), inters2.cc (1.8), permute.cc
	(1.9), randchull1.cc (1.8), removedim1.cc (1.2), removedim2.cc
	(1.5): Added the comment to the tests, the inclusion of the file
	"ehandlers.hh", use the function set_handlers() and added some
	NOISY-print of the polyhedra (where they are necessary).

2001-10-29 Monday 09:33  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/Makefile.am (1.22): Committing Makefile.am was unwanted
	(error6 is a non-meaningful dummy test).

2001-10-29 Monday 06:47  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Generator.cc (1.7), Polyhedron.defs.hh (1.52),
	conversion.cc (1.7), Integer/Integer.cc (1.4),
	Integer/Integer.defs.hh (1.5), Integer/Integer.inlines.hh (1.5):
	The Integer constants 0 and 1 are now provided by the static
	methods Integer::zero() and Integer::one().

2001-10-28 Sunday 21:41  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/ConSys.cc (1.13), src/ConSys.defs.hh (1.21),
	src/ConSys.inlines.hh (1.6), src/GenSys.cc (1.15),
	src/GenSys.defs.hh (1.30), src/GenSys.inlines.hh (1.6),
	src/Generator.defs.hh (1.23), src/Polyhedron.cc (1.44),
	tests/Makefile.am (1.21): Added static members denoting the
	zero-dim usatisfiable constraint, teh corresponding constraint
	system and the system of generators corresponding to the zero-dim
	universe.

2001-10-28 Sunday 20:05  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.cc (1.4), Constraint.defs.hh (1.18):
	is_non_trivial() now correctly handles inconsistent constraints,
	which should NOT be considered trivial.  Output operator now
	correctly prints inconsistent constraints.

2001-10-28 Sunday 18:50  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/: Prolog_interface.dox (1.4),
	SICStus/ppl_sicstus.pl (1.10): Added ppl_insert_constraints/2 and
	ppl_insert_generators/2.

2001-10-28 Sunday 18:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/: Prolog_interface.dox (1.3),
	SICStus/ppl_sicstus.cc (1.13), SICStus/ppl_sicstus.pl (1.9): Added
	ppl_add_dimensions_and_embed/2 and
	ppl_add_dimensions_and_project/2.

2001-10-28 Sunday 18:25  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/: Prolog_interface.dox (1.2),
	SICStus/ppl_check.pl (1.6), SICStus/ppl_sicstus.cc (1.12),
	SICStus/ppl_sicstus.pl (1.8): ppl_remove_dimensions/2 added.

2001-10-28 Sunday 14:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.11), configure.ac (1.12),
	interfaces/Prolog/Makefile.am (1.2): Try not to bother people
	without the SICStus include file.

2001-10-28 Sunday 14:20  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Generator.cc (1.6), Generator.defs.hh (1.22),
	Generator.inlines.hh (1.12), LinExpression.cc (1.4),
	LinExpression.defs.hh (1.15): Now the friend function vertex(e, d)
	has also its first argument optional; calling vertex() creates the
	origin of the zero-dim vector space.  Added zero-dim checks to
	ray(e) and line(e).

2001-10-28 Sunday 13:46  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/Makefile.am (1.13), doc/devref-browse.doxyconf-latex.in
	(1.7), doc/devref-print.doxyconf-latex.in (1.7),
	doc/devref.doxyconf-html.in (1.8),
	doc/user-browse.doxyconf-latex.in (1.8),
	doc/user-print.doxyconf-latex.in (1.8), doc/user.doxyconf-html.in
	(1.10), interfaces/Prolog/Prolog_interface.dox (1.1): Provide a
	framework for the Prolog interface documentation.

2001-10-28 Sunday 11:12  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/removedim2.cc (1.4): Moved creation of lin-expr
	infrastructure outside the loop.

2001-10-28 Sunday 10:39  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_check.pl (1.5), ppl_sicstus.cc
	(1.11), ppl_sicstus.pl (1.7): Added ppl_get_constraints/2 and
	ppl_get_generators/2.

2001-10-28 Sunday 10:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.51): Do not create yet another Integer
	set to one to use as default parameter: use Integer::one instead.

2001-10-28 Sunday 10:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Constraint.defs.hh (1.17), Generator.defs.hh (1.21),
	Generator.inlines.hh (1.11): New methods of Generator:
	last_variable(), coefficient(), and divisor().	Harmonized with the
	ones of Constraint.  Do not create yet another Integer set to one
	to use as default parameter: use Integer::one instead.

2001-10-28 Sunday 08:37  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.43): Corrected the error making test
	`randchull1' fail (I was forgetting to clear flags after insertion
	of the generator).

2001-10-27 Saturday 22:53  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/onepoint.cc (1.1): New test on the creation of a one-point
	polyhedron.

2001-10-27 Saturday 22:52  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.20), error1.cc (1.5), error2.cc (1.6),
	error3.cc (1.6), error4.cc (1.2), error5.cc (1.3), removedim.cc
	(1.3), removedim1.cc (1.1), removedim2.cc (1.3): Try to be
	consistent.

2001-10-27 Saturday 18:32  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Constraint.defs.hh (1.16), Constraint.inlines.hh (1.7): New
	Constraint methods: last_variable(), coefficient(Variable v) and
	coefficient() to return the last variable, the homogeneous and
	inhomogeneous coefficients.

2001-10-27 Saturday 17:59  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_check.pl (1.4), ppl_sicstus.cc
	(1.10), ppl_sicstus.pl (1.6): ppl_new_polyhedron/1 replaced with
	ppl_new_polyhedron/2 and ppl_new_empty_polyhedron/2.

2001-10-27 Saturday 16:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/definitions.dox (1.32), src/Constraint.defs.hh (1.15),
	src/Constraint.inlines.hh (1.6), src/Generator.cc (1.5),
	src/Generator.defs.hh (1.20), src/Generator.inlines.hh (1.10),
	src/Polyhedron.cc (1.42), src/Polyhedron.defs.hh (1.50),
	src/Polyhedron.inlines.hh (1.9), src/Status.cc (1.7),
	src/Status.defs.hh (1.9), src/Status.inlines.hh (1.3),
	tests/Makefile.am (1.19), tests/affinetrans.cc (1.2),
	tests/append1.cc (1.4), tests/append2.cc (1.5), tests/empty1.cc
	(1.4), tests/error3.cc (1.5), tests/error5.cc (1.2),
	tests/inters2.cc (1.7), tests/permute.cc (1.8), tests/print.hh
	(1.3), tests/randchull1.cc (1.7), tests/removedim.cc (1.2),
	tests/removedim2.cc (1.2): All changes on the `space_dim' branch
	have been merged to the main trunk.

2001-10-27 Saturday 15:30  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.12): In Polyhedron::insert(const
	Generator&) added generator type check.

2001-10-27 Saturday 15:24  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.defs.hh, Constraint.inlines.hh, Polyhedron.cc,
	Polyhedron.defs.hh (space_dim.[1,1,11,6]): Default constructor for
	Constraint is now private and not implemented.	In
	Polyhedron::insert(const Generator&) we should check that the
	generator is a vertex if the polyhedron is empty (we cannot add
	just a ray or a line).

2001-10-27 Saturday 15:12  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_sicstus.cc (1.9), ppl_sicstus.pl
	(1.5): ppl_widening_assign/2 added.

2001-10-27 Saturday 15:00  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_sicstus.cc (1.8), ppl_sicstus.pl
	(1.4): ppl_intersection_assign/2 and ppl_convex_hull_assign/2
	added.	Try to be as const-correct as possible.

2001-10-27 Saturday 14:45  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_check.pl (1.3), ppl_sicstus.cc
	(1.7), ppl_sicstus.pl (1.3): ppl_check_empty/1 added.

2001-10-27 Saturday 14:31  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.6):
	SP_register_atom() and SP_unregister_atom() can fail.

2001-10-27 Saturday 14:14  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/: ppl_check.pl (1.2), ppl_sicstus.cc
	(1.5), ppl_sicstus.pl (1.2): ppl_insert_generator/2 added.

2001-10-27 Saturday 12:35  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc, src/Polyhedron.defs.hh,
	src/Polyhedron.inlines.hh, src/Status.cc, src/Status.defs.hh,
	src/Status.inlines.hh, tests/empty1.cc, tests/inters2.cc,
	tests/print.hh, tests/randchull1.cc
	(space_dim.[10,5,2,1,1,1,1,1,1,1]): The zero_dim flag (and methods)
	in Status changed into more meaningful "zero_dim_univ".  A lot of
	small changes to have a consistent dimension-checking.	Now there
	is one "default" constructor for Polyhedron having two optional
	arguments: the space dimension (default 0) and the degenerate kind
	(default UNIVERSE).  Tests adapted to use the new constructor and
	to avoid using the removed Polyhedron::is_zero_dim().

2001-10-27 Saturday 12:26  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.31): Proposition after Minkowsky's theorem
	corrected (we can CHOOSE extreme rays so that they have rational
	coefficients).

2001-10-27 Saturday 11:54  Elisa Ricci <ericci@cs.unipr.it>

	* tests/: affinetrans.cc, error3.cc (space_dim.[2,2]): To build the
	polyhedron that we want using the system of generators, we must
	create the system of generators and then use Polyhedron ph(gs). 
	(If we use Polyhedron ph(num_dim), we have the universe polyhedron
	and then when we add the generators we do not have our polyhedron
	but the universe one).

2001-10-27 Saturday 11:49  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (space_dim.4): Added an example for the
	function remove_dimensions (the example 8).  In the examples when
	we build a polyhedron we must specify the dimension of the space if
	then we use the function Polyhedron::insert(Constraint).  We can
	not do the same thing if then we want to use the function
	Polyhedron::insert(Generator) In fact, in this case we build the
	universe polyhedron and then we add the generators. To build a
	polyhedron starting from the system of generators we must create
	the system of generators and then use Polyhedron ph(gs).

2001-10-27 Saturday 11:02  Roberto Bagnara <bagnara@cs.unipr.it>

	* configure.ac (1.11): Version number bumped so as to avoid
	confusion: 0.2-pre1.

2001-10-27 Saturday 10:59  Roberto Bagnara <bagnara@cs.unipr.it>

	* configure.ac (1.10), interfaces/Prolog/SICStus/Makefile.am (1.2),
	interfaces/Prolog/SICStus/ppl_check.pl (1.1),
	interfaces/Prolog/SICStus/ppl_sicstus.cc (1.4),
	interfaces/Prolog/SICStus/ppl_sicstus.pl (1.1): Check to see
	whether `sicstus' is installed: if it is, tests can be performed. 
	Some progress in the interface itself.

2001-10-27 Saturday 10:58  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.41): ConSys and GenSys do not yet provide a
	`bool empty() const' method.

2001-10-27 Saturday 10:55  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Makefile.am (1.15): Distribute ppl_header.middle.

2001-10-26 Friday 21:24  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.3): Exception
	handling improved.

2001-10-26 Friday 19:04  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc, tests/Makefile.am, tests/removedim2.cc
	(space_dim.[9,4,1]): Polyhedron::remove_dimensions(...) rewritten
	from scratch.  Added a new test to check its correctness.

2001-10-26 Friday 19:04  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/removedim2.cc (1.1): file removedim2.cc was initially added
	on branch space_dim.

2001-10-26 Friday 18:54  Roberto Bagnara <bagnara@cs.unipr.it>

	* interfaces/Prolog/SICStus/ppl_sicstus.cc (1.2): Can now insert
	constraints into a polyhedron.

2001-10-26 Friday 16:57  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Makefile.am, ppl_header.middle (space_dim.[1,1]): Get
	around a bug in GCC versions prior to 3 whereby the <cassert>
	header is wrongly guarded against multiple inclusion.

2001-10-26 Friday 16:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.12), config.h.in (1.10), configure.ac (1.9),
	interfaces/.cvsignore (1.1), interfaces/Makefile.am (1.1),
	interfaces/Prolog/.cvsignore (1.1), interfaces/Prolog/Makefile.am
	(1.1), interfaces/Prolog/SICStus/.cvsignore (1.1),
	interfaces/Prolog/SICStus/Makefile.am (1.1),
	interfaces/Prolog/SICStus/ppl_sicstus.cc (1.1): Start working on
	the Prolog interfaces.

2001-10-26 Friday 16:51  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Makefile.am (1.14): ppl_install.hh depends also on
	ppl_header.middle.

2001-10-26 Friday 16:46  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Makefile.am (1.13), ppl_header.middle (1.1): Get around a
	bug in GCC versions prior to 3 whereby the <cassert> header is
	wrongly guarded against multiple inclusion.

2001-10-26 Friday 16:45  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Polyhedron.cc (1.40), Variable.defs.hh (1.9): Just
	formatting.

2001-10-26 Friday 13:11  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.8): A few trivial errors inside
	assertions fixed.

2001-10-26 Friday 12:29  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.7): In function add_generators we
	resize the matrix gs that we want to add if space_dimension() >
	num_columns() - 1.

2001-10-26 Friday 12:14  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.6): Added the dimension-consistency
	check in the function add_constraints_lazy and add_generators.	In
	functions add_constraints and add_generators we use 
	if(check_empty()) instead of  minimize() if(is_empty()) In
	functions add_constraints and add_constraints_lazy we resize the
	matrix of constraints that we add if  num_columns - 1 <
	space_dimension().

2001-10-26 Friday 12:08  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Generator.defs.hh, Generator.inlines.hh (space_dim.[1,1]):
	The default constructor for Generator is now private and
	unimplemented.

2001-10-26 Friday 11:22  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/: Makefile.am, error5.cc, removedim.cc (space_dim.[3,1,2]):
	New test for dimension-compatibility in
	Polyhedron::remove_dimensions.	The test still fails because
	objects of set<Variable> do not provide ordered access to their
	elements (yet).

2001-10-26 Friday 11:22  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/error5.cc (1.1): file error5.cc was initially added on
	branch space_dim.

2001-10-26 Friday 10:42  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/: Makefile.am, removedim.cc, remuvedim.cc
	(space_dim.[2,1,2]): Test file "remuvedim.cc" renamed.

2001-10-26 Friday 10:42  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/removedim.cc (1.1): file removedim.cc was initially added
	on branch space_dim.

2001-10-26 Friday 10:38  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.5): Using begin() instead of max()
	to select the highest dimension variable from a set of variables.

2001-10-26 Friday 10:34  Elisa Ricci <ericci@cs.unipr.it>

	* tests/: Makefile.am, remuvedim.cc (space_dim.[1,1]): Added a test
	for the function remuve_dimensions(...).

2001-10-26 Friday 10:34  Elisa Ricci <ericci@cs.unipr.it>

	* tests/remuvedim.cc (1.1): file remuvedim.cc was initially added
	on branch space_dim.

2001-10-26 Friday 10:34  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.4): Some comments improved. Added
	dimension-compatibility checks to
	Polyhedron::remove_dimensions(...).

2001-10-25 Thursday 23:21  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc, tests/affinetrans.cc, tests/append1.cc,
	tests/append2.cc, tests/error3.cc, tests/permute.cc
	(space_dim.[3,1,1,1,1,2]): Going on ading the right
	dimension-compatibility checks.  Now the tests are all passed (some
	of them changed to declare polyhedra dimensions in the
	constructors, other changed by calling operator
	add_dimensions_and_embed).

2001-10-25 Thursday 20:59  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Generator.cc (space_dim.1): Strange code indentation fixed.

2001-10-25 Thursday 20:36  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (space_dim.2): In operator <=(x,y) we only need
	the generators of x and the constraints of y.  In functions
	intersection_assign and convex_hull, we did two checks of the
	dimension of the space (one with space_dimension() and the other
	with num_columns()).  In functions add_dimensions_and_embed and
	add_dimensions_and_project we have both the system of constraints
	and the system of generators minimized when we add some dimensions
	to a polyhedron in a 0-dimensional space.

2001-10-25 Thursday 16:45  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc, src/Polyhedron.defs.hh,
	src/Polyhedron.inlines.hh, tests/permute.cc (space_dim.[1,3,1,1]):
	Added private member Polyhedron::space_dim, which stores the number
	of dimensions of the enclosing space.  Public member
	Polyhedron::num_dimensions() renamed into
	Polyhedron::space_dimension() and now reads the member space_dim. 
	Started modifying methods of the class Polyhedron so that they
	consistently use space_dimension() and space_dim.  Started guarding
	methods by suitable dimension-compatibility checks.

2001-10-25 Thursday 11:28  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.defs.hh (space_dim.2): All comparison operators on
	Polyhedron throw an exception when the two polyhedra are
	dimension-incompatible.

2001-10-25 Thursday 11:18  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox, src/Polyhedron.defs.hh (space_dim.[1,1]):
	Added an informal specification for dimension-compatibility.  The
	specification of Polyhedron::insert now says that an exception is
	thrown if the argument is dimension-incompatible with the
	polyhedron.

2001-10-24 Wednesday 20:16  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Generator.defs.hh (1.19), Polyhedron.cc (1.39),
	Polyhedron.defs.hh (1.49): Exceptions are thrown when polyhedra are
	dimension-incompatible.

2001-10-24 Wednesday 20:15  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.30): Better explained the difference
	between the dimension of the polyhedron and the dimension of the
	enclosing space.  The terminology "dimension-consistent" added.
	Pointed out what seems to be a problem with empty polyhedrons (what
	is the dimensions of their enclosing space?)

2001-10-24 Wednesday 14:57  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.29): A full scan on the user-manual
	portion of the introduction.  In particular: - added a proposition
	after Minkowsky's theorem for rational polyhedra; - preferring the
	use of \lambda wrt \mu for scalars; - yet another variation on the
	definition of extreme rays; - "non-negative" combinations are now
	"positive" combinations; - better explaining the border-line cases
	of the generators representation.

2001-10-24 Wednesday 10:47  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.28): Doxygen does not accept "\f(" [and
	neither the potentially correct "\f\("] as a way to enter LaTeX
	mathematical environment.  Indexes of vectors goes from 0 to the
	dim-1.

2001-10-23 Tuesday 20:15  Roberto Bagnara <bagnara@cs.unipr.it>

	* README (1.7): Ready for distribution.

2001-10-23 Tuesday 19:43  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.11): Distribute also the BUGS file.

2001-10-23 Tuesday 19:36  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/Makefile.am (1.12): Produce and make available HTML
	documentation to be used off-line.

2001-10-23 Tuesday 19:35  Roberto Bagnara <bagnara@cs.unipr.it>

	* BUGS (1.1), NEWS (1.2), TODO (1.2): Initial versions of these
	files.

2001-10-23 Tuesday 19:23  Elisa Ricci <ericci@cs.unipr.it>

	* tests/: Makefile.am (1.18), affinetrans.cc (1.1): Added a test
	for the functions assign_variable and substitute_variable.

2001-10-23 Tuesday 19:21  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.38): In function assign_variable and
	substitute_variable we must have size_t num_columns =
	x.num_dimensions() + 1 instead of size_t num_columns =
	x.con_sys(gen_sys).num_columns() because at this point we do not
	know which system we have.

2001-10-23 Tuesday 18:52  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.27): A small improvement on the
	explanation of the representation by generators.

2001-10-23 Tuesday 18:50  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Polyhedron.cc (1.37), Polyhedron.defs.hh (1.48):
	Polyhedron::constraints() no longer throws an exception when *this
	is a zero-dimensional polyhedron (now it returns the empty system
	of constraints).  Polyhedron::generators() no longer throws an
	exception when *this is an empty polyhedron (now it returns the
	empty system of generators).

2001-10-23 Tuesday 18:12  Elisa Ricci <ericci@cs.unipr.it>

	* src/minimize.cc (1.4): We see the definitions in the Introduction
	and not in the file definition.dox.

2001-10-23 Tuesday 18:09  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.47): Typo fixed.

2001-10-23 Tuesday 18:05  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/: Makefile.am (1.17), error4.cc (1.1): Added a test on the
	exception thrown when building a polyhedron by using a non-empty
	system of generators with no vertices.

2001-10-23 Tuesday 17:57  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.46): Added the explanation of why a
	parameter of a function is non-constant.

2001-10-23 Tuesday 17:54  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.cc (1.36): Exception messages now use the
	"function: message" convention.  The comment in
	PPL::Polyhedron::Polyhedron(GenSys& gs) related to the existence of
	a vertex improved.

2001-10-23 Tuesday 17:27  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.26): In the proposition after the
	definition of rays, we need to consider a non-empty polyhedron and
	a non-zero vector \vect{r}.  It is NOT true that extreme rays
	define _all_ the directions in which an arbitrary polyhedron is
	infinite.  Definition of line simplified. A typo fixed in
	definition of Minkowsky's sum.

2001-10-23 Tuesday 16:50  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.35): In function
	Polyhedron::insert(Constraint), if we add a constraint to an empty
	polyhedron it remains empty.

2001-10-23 Tuesday 16:35  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.34), Polyhedron.defs.hh (1.45): When a
	polyhedron is built starting from a system of generators, this must
	have at least a vertex; otherwise an exception is thrown.

2001-10-23 Tuesday 16:17  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Generator.cc (1.4), Generator.inlines.hh (1.9),
	Polyhedron.cc (1.33), Polyhedron.inlines.hh (1.8): Inlining is no
	longer requested for functions that may throw.

2001-10-23 Tuesday 16:11  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.9), configure.ac (1.8), src/Makefile.am (1.12),
	src/Row.defs.hh (1.4), src/ppl_header.bottom (1.3),
	src/ppl_header.top (1.2): Better configuration and macro handling.

2001-10-23 Tuesday 14:33  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.32): DLEVEL noise removed.

2001-10-23 Tuesday 14:28  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.8), configure.ac (1.7), src/ConSys.cc (1.12),
	src/ConSys.defs.hh (1.20), src/ConSys.inlines.hh (1.5),
	src/Constraint.cc (1.3), src/Constraint.defs.hh (1.14),
	src/Constraint.inlines.hh (1.5), src/GenSys.cc (1.14),
	src/GenSys.defs.hh (1.29), src/GenSys.inlines.hh (1.5),
	src/Generator.cc (1.3), src/Generator.defs.hh (1.18),
	src/Generator.inlines.hh (1.8), src/LinExpression.cc (1.3),
	src/LinExpression.defs.hh (1.14), src/LinExpression.inlines.hh
	(1.4), src/Makefile.am (1.11), src/Matrix.cc (1.6),
	src/Matrix.defs.hh (1.6), src/Matrix.inlines.hh (1.4),
	src/Polyhedron.cc (1.31), src/Polyhedron.defs.hh (1.44),
	src/Polyhedron.inlines.hh (1.7), src/Row.cc (1.5), src/Row.defs.hh
	(1.3), src/Row.inlines.hh (1.5), src/SatMatrix.cc (1.6),
	src/SatMatrix.defs.hh (1.7), src/SatMatrix.inlines.hh (1.4),
	src/SatRow.cc (1.4), src/SatRow.defs.hh (1.7),
	src/SatRow.inlines.hh (1.4), src/Status.cc (1.6),
	src/Status.defs.hh (1.8), src/Status.inlines.hh (1.2),
	src/Variable.cc (1.3), src/Variable.defs.hh (1.8),
	src/Variable.inlines.hh (1.3), src/ppl_header.bottom (1.2),
	src/Integer/Integer.cc (1.3), src/Integer/Integer.defs.hh (1.4),
	src/Integer/Integer.inlines.hh (1.4): The INLINE/OUTLINE mechanism
	has gone: it caused too many problems.

2001-10-23 Tuesday 14:08  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: GenSys.defs.hh (1.28), GenSys.inlines.hh (1.4): Inserting a
	generator in a GenSys automatically adjust the dimensions. 
	Specialization of std:swap for GenSys's added.

2001-10-23 Tuesday 14:07  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.defs.hh (1.19), ConSys.inlines.hh (1.4): Better
	documented the fact that, when inserting constraints in a ConSys,
	dimensions are automatically adjusted.	Added the specialization of
	function std:swap for ConSys's.

2001-10-23 Tuesday 13:40  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/: definitions.dox (1.25), ppl.sty (1.5): Changes to allow for
	a decomposition when there are no vertices.

2001-10-23 Tuesday 11:42  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.43): Brackets closing a namespace
	should be marked as in
	
	namespace Parma_Polyhedra_Library {   ...  } // namespace
	Parma_Polyhedra_Library

2001-10-23 Tuesday 11:40  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/SatMatrix.inlines.hh (1.3): Must include <cassert>.

2001-10-23 Tuesday 11:39  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/maxmin.hh (1.2): Put everything in our namespace.

2001-10-23 Tuesday 10:58  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.24): Changes to user introduction to
	clarify why a polyhedron represented by a system of generators
	needs a vertex.  On-going improvements to the developer's guide
	including the removal of some repeated definitions.  Minor bugs
	fixed.

2001-10-23 Tuesday 10:02  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/Makefile.am (1.16): INCLUDES now includes @extra_includes@.

2001-10-23 Tuesday 09:53  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.11), GenSys.cc (1.13), simplify.cc (1.5): For
	the definitions and the rules, we must see the Introduction instead
	of the file definitions.dox.  In the functions assign_variable and
	substitute_variable, the parameter "expr" is the "numerator" of
	affine expression.

2001-10-23 Tuesday 09:47  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: ConSys.cc (1.10), Constraint.cc (1.2),
	Constraint.inlines.hh (1.4), GenSys.cc (1.12), LinExpression.cc
	(1.2), Matrix.cc (1.5), Matrix.inlines.hh (1.3), Row.cc (1.4),
	Row.inlines.hh (1.4), SatMatrix.cc (1.5): Do not request the
	inlining of functions containing loops.  Be consistent in the use
	of namespace names and aliases.

2001-10-23 Tuesday 08:22  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.7), configure.ac (1.6),
	doc/user-browse.doxyconf-latex.in (1.7),
	doc/user-print.doxyconf-latex.in (1.7), doc/user.doxyconf-html.in
	(1.9), src/Makefile.am (1.10), src/Polyhedron.inlines.hh (1.6),
	src/ppl.cc (1.3), src/ppl_header.bottom (1.1), src/ppl_header.top
	(1.1), src/protect.sed (1.3), src/restore.sed (1.3),
	tests/append1.cc (1.3), tests/append2.cc (1.4), tests/empty1.cc
	(1.3), tests/error1.cc (1.4), tests/error2.cc (1.5),
	tests/error3.cc (1.4), tests/inters1.cc (1.5), tests/inters2.cc
	(1.6), tests/permute.cc (1.7), tests/print.hh (1.2),
	tests/randchull1.cc (1.6): The mechanism for automatically
	generating the header files has been rewritten from scratch.  We no
	longer depend on kcc: we use CXXCPP instead.  Avoid checking for
	header files we do not use.  Try to convince Doxygen not to sort
	things the way he wants, at least in user's documentation
	(SORT_MEMBER_DOCS = no).  Using std::invalid argument requires
	including <stdexcept>.	All tests should include the header file
	that will be installed (ppl_install.hh) so that we avoid checking
	against an already installed header (ppl.hh).

2001-10-23 Tuesday 08:14  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Status.cc (1.5): Do not fight against emacs indentation
	rules.

2001-10-22 Monday 19:13  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.defs.hh (1.18), GenSys.defs.hh (1.27): When using
	the doxygen command \code, indentation really matters and, for
	consistency, we should start with a 2-spaces indentation.

2001-10-22 Monday 19:11  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Generator.defs.hh (1.17): Example on how to build vertices
	split into two parts: the first one shows how to build a generic
	vertex and, in particular, the origin of the space; the second one
	shows how to use the optional denominator argument.

2001-10-22 Monday 19:07  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Status.cc (1.4), Status.defs.hh (1.7): An annoying warning
	about an unused argument dealt with by exploiting pre-processing
	macro NDEBUG.

2001-10-22 Monday 16:18  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.30), conversion.cc (1.6), simplify.cc
	(1.4): Used the notation of "vect{..}" for all the vectors that are
	in the comments.  The definitions and the rules must be seen in the
	"Introduction" instead of "definitions.dox" or
	"user_definitions.dox".

2001-10-22 Monday 16:08  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Polyhedron.cc (1.29), Polyhedron.defs.hh (1.42): Now the
	argument `denominator' for methods Polyhedron::assign_variable and
	Polyhedron::substitute_variable is a _const_ Integer&, optional and
	with a default value of 1.

2001-10-22 Monday 15:58  Roberto Bagnara <bagnara@cs.unipr.it>

	* ChangeLog (1.2): Updated.

2001-10-22 Monday 15:18  Enea Zaffanella <zaffanella@cs.unipr.it>

	* tests/: error1.cc (1.3), error2.cc (1.4), error3.cc (1.3),
	inters2.cc (1.5), randchull1.cc (1.5): All tests updated to use the
	new functions line, ray and vertex.

2001-10-22 Monday 15:10  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.cc (1.9), ConSys.defs.hh (1.17), GenSys.cc (1.11),
	GenSys.defs.hh (1.26), Generator.defs.hh (1.16),
	Generator.inlines.hh (1.7), Polyhedron.defs.hh (1.41): Operators |,
	^, /= have now been replaced by functions `line', 'ray' and
	'vertex'. Note that the function vertex has an _optional_ second
	argument (the denominator), with default value 1.  Hopefully, all
	the documentation has been changed accordingly (please check).	In
	GenSys and ConSys, now the functions assign_variable and
	substitute_variable take a _const_ Integer& as their third
	argument.  The same change cannot be applied to the corresponding
	functions defined on Polyhedron, since we perform a swap on this
	argument, so that it cannot be const.  However, I am now seeing if
	it is possible to have also these as "optional" arguments, with a
	default value of 1. Alas, I need to read the C++ manual in order to
	see how I can define a default value for a non-const argument
	passed by reference.

2001-10-22 Monday 15:05  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.6), configure.ac (1.5),
	doc/devref-browse.doxyconf-latex.in (1.6),
	doc/devref-print.doxyconf-latex.in (1.6),
	doc/devref.doxyconf-html.in (1.7), src/.cvsignore (1.4),
	src/Makefile.am (1.9), src/SatRow.cc (1.3), src/SatRow.defs.hh
	(1.6), src/SatRow.inlines.hh (1.3): SatRow reimplemented from
	scratch: we no longer depend on the BitSet class.

2001-10-22 Monday 14:26  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.23): Changed \alpha in the definition of
	affine transformations to \lambda.  Added a comment after the
	definition of "Combinations" that the empty sum is the origin.

2001-10-22 Monday 10:34  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.22): Changes to wording and restructuring
	of the definition of Polyhedra.  New headings added : Constraints
	representation and Rational polyheron.	Heading "Generators"
	replaced by "Generators representation".  Wording in this
	definition changed

2001-10-22 Monday 10:02  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.40): In the comments, there was a
	system of constraints called "constraints" instead of "cs" and a
	variable called "var" instead of "v".

2001-10-22 Monday 09:54  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/Generator.defs.hh (1.15): Wording of comment on how to build
	a generator changed. Also minor changes to wording in the following
	examples.

2001-10-22 Monday 09:52  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.21): I was wrong to remove the
	"^\transpose" in Weil's theorem - restored.

2001-10-22 Monday 09:25  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.39): In two examples, erased the spaces
	between the factor and the variable.

2001-10-22 Monday 09:04  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.20): Comment at the end of Weil's theorem
	had "convex" and "positive" and "rays" and "vertices" wrong way
	round.	Minor change to wording introducing the two theorems.  In
	final comment of user part, "blurb" removed.

2001-10-22 Monday 08:49  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.19): Removed spurious ^\transpose (^T) in
	Weil's theorem.  Added "dual representation" as heading and
	emphasised in text at end of user definitions.

2001-10-21 Sunday 15:50  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.defs.hh (1.16), GenSys.defs.hh (1.25),
	Generator.defs.hh (1.14), Generator.inlines.hh (1.6),
	LinExpression.defs.hh (1.13), LinExpression.inlines.hh (1.3),
	Polyhedron.defs.hh (1.38): Systems of constraints and generators do
	not define polyhedra; rather, they may "correspond to" a given
	polyhedron (the one that would be built by applying the adequate
	constructor).  A system of generator does not need to include a
	vertex, in general.  The vertex is needed if the system of
	generators is meant to correspond to a non-empty polyhedron.  The
	detailed description of class Generator changed to highlight that
	vertices, lines and rays are represented as a type plus a direction
	in the space.

2001-10-21 Sunday 14:00  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.10): CREDITS added to the distribution.

2001-10-21 Sunday 13:04  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.defs.hh (1.13), Constraint.inlines.hh (1.3): In
	the documentation, used n to denote the dimension of the space.  In
	the renaming operator >>, the parameter p renamed into offset,
	consistently with the comment.	In the examples, removed spaces
	between factor and variable when specifying a linear expression
	(e.g., "3 * x + 4 * y" now is written "3*x + 4*y").

2001-10-21 Sunday 13:01  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/definitions.dox (1.18): When specifying the coordinates of a
	point, indexes should range from 0 to n-1, if n is the dimension of
	the space.  This is to be consistent with definition of class
	Variable.  Change applied to the definitions of scalar-product, of
	polytope and to Weil's theorem.  Note: I do not like to say a
	polyhedron is "open" in one direction; I prefer the terminology
	"unbounded", so I changed it.

2001-10-21 Sunday 12:09  Elisa Ricci <ericci@cs.unipr.it>

	* doc/definitions.dox (1.17): Restored some mathematical changes
	and used the notation "\vect{..}" for all the vectors (also in the
	part that is not in the user manual).

2001-10-21 Sunday 11:56  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.defs.hh (1.12), Generator.defs.hh (1.13),
	Polyhedron.defs.hh (1.37), Variable.cc (1.2), Variable.defs.hh
	(1.7): In the documentation of the namespace PPL, all non-friend
	operators are now grouped consistently. I do not like very much the
	current header of each group ("Non-friend operators on objects ..."
	is maybe too much implementation-aware), but in any case it is
	definitely better than the default grouping header ("Functions").

2001-10-21 Sunday 11:53  Enea Zaffanella <zaffanella@cs.unipr.it>

	* README (1.6): Now it is in sync with the home page of the www
	documentation.

2001-10-21 Sunday 11:14  Enea Zaffanella <zaffanella@cs.unipr.it>

	* doc/: definitions.dox (1.16), ppl.sty (1.4): The new macro \vect
	inserted in ppl.sty; now the macro simply uses the latex command
	\mathbf, but we can modify its meaning as we like.  Had a run on
	definitions.dox to consistently use the new macro: be careful, in
	the future, to use 0 when a scalar is meant, and \vect{0} when the
	origin of the space is meant.  Also made small, readability related
	changes to Minkowsky's and Weil's theorems.

2001-10-20 Saturday 21:30  Roberto Bagnara <bagnara@cs.unipr.it>

	* README (1.5): Equation -> equality.

2001-10-20 Saturday 16:33  Roberto Bagnara <bagnara@cs.unipr.it>

	* README (1.4): Almost complete: only the directory structure is
	missing.

2001-10-20 Saturday 16:33  Roberto Bagnara <bagnara@cs.unipr.it>

	* CREDITS (1.2): Just a formatting change.

2001-10-20 Saturday 16:25  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: definitions.dox (1.15), devref.tex (1.5), user.tex (1.6):
	Footers fixed.	Put the blame on Doxygen.

2001-10-20 Saturday 16:22  Roberto Bagnara <bagnara@cs.unipr.it>

	* AUTHORS (1.2), CREDITS (1.1): Renamed and completed.

2001-10-20 Saturday 12:22  Elisa Ricci <ericci@cs.unipr.it>

	* doc/definitions.dox (1.14), src/Polyhedron.defs.hh (1.36): Moved
	the definition of the universe polyhedron after the definition of
	the polyhedron.

2001-10-20 Saturday 11:47  Elisa Ricci <ericci@cs.unipr.it>

	* src/: GenSys.cc (1.10), GenSys.defs.hh (1.24), Polyhedron.cc
	(1.28), Polyhedron.defs.hh (1.35), Status.defs.hh (1.6),
	conversion.cc (1.5): Now, we always use `system of' instead of `set
	of' for GenSys and ConSys.  In the comment of polyhedron added the
	explanation of what an universal polyhedron is.  Some changes to
	the comment of the exception: we say that they "have different
	dimension" instead of that they "do not have the same dimension".

2001-10-20 Saturday 10:26  Elisa Ricci <ericci@cs.unipr.it>

	* src/LinExpression.defs.hh (1.12): In the second part of the
	example, we can use  LinExpression e = LinExpression(14) instead of
	  LinExpression e = LinExpression(Integer(14)).

2001-10-19 Friday 20:07  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: user-browse.doxyconf-latex.in (1.6),
	user-print.doxyconf-latex.in (1.6), user.doxyconf-html.in (1.8): No
	INTERNAL_DOCS, no INHERIT_DOCS, no FILE_PATTERNS, and no
	EXCLUDE_PATTERNS.

2001-10-19 Friday 19:57  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: ConSys.defs.hh (1.15), GenSys.defs.hh (1.23): Use
	PPL_INTERNAL inheritance.

2001-10-19 Friday 19:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Integer/Integer.defs.hh (1.3): Short comment to swap, not
	long comment to std.

2001-10-19 Friday 18:13  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.13): Generators and associated terminology
	now defined in the user section.  There is now some repetition of
	definitions in the developer's section.

2001-10-19 Friday 17:27  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.27), Polyhedron.defs.hh (1.34),
	Polyhedron.inlines.hh (1.5): Simplified the comment to the function
	swap.  Used `v' instead of `var', `dim' instead of `add_dim'.  All
	the ConSys are called `cs' and all the GenSys are called `gs'. 
	Used the expression "thrown if" to introduce the comment to the
	exceptions.  The variable is "substituted" in the function
	substitute_variable.

2001-10-19 Friday 17:19  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.8), ConSys.defs.hh (1.14), GenSys.cc (1.9),
	GenSys.defs.hh (1.22): The Generator is called `g' instead of `r'
	and the number that indicates the variable is called `v' instead of
	'var'.

2001-10-19 Friday 17:12  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Constraint.defs.hh (1.11), Generator.defs.hh (1.12):
	Constraint and Generator are :: PPL_INTERNAL Row instead of ::
	public Row (like LinExpression).

2001-10-19 Friday 14:24  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.9), depcomp (1.2), install-sh (1.2), ppl.spec.in
	(1.6), doc/Makefile.am (1.11), doc/definitions.dox (1.12),
	doc/devref-browse.doxyconf-latex.in (1.5),
	doc/devref-print.doxyconf-latex.in (1.5),
	doc/devref.doxyconf-html.in (1.6), doc/gpl.dox (1.2),
	doc/user-browse.doxyconf-latex.in (1.5),
	doc/user-print.doxyconf-latex.in (1.5), doc/user.doxyconf-html.in
	(1.7), src/ConSys.cc (1.7), src/ConSys.defs.hh (1.13),
	src/ConSys.inlines.hh (1.3), src/Constraint.defs.hh (1.10),
	src/GenSys.cc (1.8), src/GenSys.defs.hh (1.21),
	src/GenSys.inlines.hh (1.3), src/Generator.defs.hh (1.11),
	src/LinExpression.defs.hh (1.11), src/Makefile.am (1.8),
	src/Matrix.cc (1.4), src/Matrix.defs.hh (1.5),
	src/Matrix.inlines.hh (1.2), src/Polyhedron.cc (1.26),
	src/Polyhedron.defs.hh (1.33), src/Polyhedron.inlines.hh (1.4),
	src/Row.cc (1.3), src/Row.inlines.hh (1.3), src/SatMatrix.cc (1.4),
	src/SatMatrix.defs.hh (1.6), src/SatMatrix.inlines.hh (1.2),
	src/SatRow.defs.hh (1.5), src/SatRow.inlines.hh (1.2),
	src/Status.cc (1.3), src/Status.defs.hh (1.5), src/conversion.cc
	(1.4), src/minimize.cc (1.3), src/simplify.cc (1.3),
	src/Integer/Integer.inlines.hh (1.3), src/Integer/Makefile.am
	(1.2), tests/Makefile.am (1.15), tests/append2.cc (1.3),
	tests/error2.cc (1.3), tests/inters1.cc (1.4), tests/inters2.cc
	(1.4), tests/permute.cc (1.6): Annoying trailing blanks removed.

2001-10-19 Friday 14:15  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: LinExpression.defs.hh (1.10), LinExpression.inlines.hh
	(1.2): We now have only one sizing constructor, and it is private.

2001-10-19 Friday 12:49  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: conversion.cc (1.3), minimize.cc (1.2), simplify.cc (1.2),
	Matrix.cc (1.3): Old junk removed.

2001-10-19 Friday 12:15  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.25), Polyhedron.defs.hh (1.32): In
	functions widening_assign and limited_widening_assign considered
	the case of empty-polyhedron and the exception for the different
	dimension of the polyhedra and the matrix (this for the
	limited_widening); added some explanations for the parameters.	In
	function assign_variable and substitute_variable considered the
	exceptions for the variable that is not inside the polyhedron and
	the expression that does not have the right dimension.

2001-10-19 Friday 09:57  Elisa Ricci <ericci@cs.unipr.it>

	* doc/definitions.dox (1.11): Some mathematical changes.

2001-10-19 Friday 09:42  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.5), configure.ac (1.4): Add checks to determine
	the size of ints and longs.

2001-10-19 Friday 09:06  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/Polyhedron.defs.hh (1.31): Examples 4 to 7 simplified.

2001-10-19 Friday 08:56  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/: Polyhedron.defs.hh (1.30), Variable.defs.hh (1.6): Changes
	to English.

2001-10-18 Thursday 18:51  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.24), Polyhedron.defs.hh (1.29),
	Polyhedron.inlines.hh (1.3): In function add_dimensions_and_embed
	and add_dimensions_and_project the case of "add_dim" = 0 and the
	case of the empty polyhedron are considered.  In functions
	add_constraints, add_constraints_lazy, add_generators, generators
	and constraints instead of some assertion some exceptions are
	added.

2001-10-18 Thursday 15:36  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/: GenSys.defs.hh (1.20), LinExpression.defs.hh (1.9),
	Polyhedron.defs.hh (1.28): More improvements to the English.

2001-10-18 Thursday 15:29  Elisa Ricci <ericci@cs.unipr.it>

	* src/GenSys.defs.hh (1.19): The real name of the function is
	GenSys_Con_Rel satisfy(const Constraint& c) const and not
	GenSys_Con_Rel satisfy_constraint(const Constraint& c) const.

2001-10-18 Thursday 14:01  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/GenSys.defs.hh (1.18): Just "specify" changed to "specifies".

2001-10-18 Thursday 13:20  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/: ConSys.defs.hh (1.12), Constraint.defs.hh (1.9),
	GenSys.defs.hh (1.17), Generator.defs.hh (1.10): Changes to
	English.  In GenSys.defs.hh the explanation about a system of
	generators changed to:	   An object of the class GenSys is a
	system of generators,	  i.e. a container of objects of the class
	Generator     (lines, rays and vertices).      The set of
	generators must include at least one vertex.	  This is needed
	since a line or ray only specify a direction	  and a point is
	needed to indicate its position.

2001-10-18 Thursday 12:40  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.23), Polyhedron.defs.hh (1.27): Now the
	function  GenSys_Con_Rel poly_satisfies_constraint(const
	Constraint& con) is called  GenSys_Con_Rel satisfies(const
	Constraint& c).  Added the exception for the functions
	convex_hull_lazy(), satisfies() and includes().

2001-10-18 Thursday 12:37  Elisa Ricci <ericci@cs.unipr.it>

	* src/: GenSys.cc (1.7), GenSys.defs.hh (1.16): Now the function
	PPL::GenSys::satisfy_constraint(const Constraint& c) const is
	called PPL::GenSys::satisfy(const Constraint& c) const.

2001-10-18 Thursday 11:36  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/ehandlers.hh (1.2): Call exit(1) instead of abort().

2001-10-18 Thursday 11:34  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.14), append1.cc (1.2), ehandlers.hh (1.1):
	Set the handlers for unexpected and uncaught exceptions.

2001-10-18 Thursday 09:38  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* src/GenSys.defs.hh (1.15): Small change to wording in
	GenSys_Con_Rel comment.

2001-10-18 Thursday 09:07  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* tests/permute.cc (1.5): Now the termination conditions are
	checked.

2001-10-18 Thursday 08:32  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* tests/permute.cc (1.4): Instead of giving the number of variables
	explicitly, it is obtained as needed using
	Polyhedron.num_dimensions.

2001-10-18 Thursday 08:13  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/Makefile.am (1.10): Now `make world' also produces the
	licenses in various formats.

2001-10-17 Wednesday 20:18  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.22): throw_different_dimensions() fixed.

2001-10-17 Wednesday 20:17  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.13), permute.cc (1.3): Made quiet.

2001-10-17 Wednesday 20:17  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/error3.cc (1.2): Fixed and made quiet.

2001-10-17 Wednesday 20:15  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/append.cc (1.4): Renamed append1.cc.

2001-10-17 Wednesday 20:14  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: append1.cc (1.1), append2.cc (1.2): Renamed.

2001-10-17 Wednesday 19:37  Elisa Ricci <ericci@cs.unipr.it>

	* tests/error3.cc (1.1): Tests whether convex_hull assign throws
	when it should.

2001-10-17 Wednesday 19:33  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.21), Polyhedron.defs.hh (1.26):
	Polyhedron::intersection_assign() and
	Polyhedron::convex_hull_assign() now throw an exception if asked to
	operate on polyhedra of different dimensions.

2001-10-17 Wednesday 16:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/permute.cc (1.2): We now use the intended constraints. 
	Termination is guaranteed by using Polyhedron::widening_assign().

2001-10-17 Wednesday 16:31  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.defs.hh (1.11), ConSys.inlines.hh (1.2),
	GenSys.defs.hh (1.14), GenSys.inlines.hh (1.2): Added the function
	swap for GenSys and ConSys.

2001-10-17 Wednesday 16:21  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* tests/: Makefile.am (1.12), append2.cc (1.1), my_append.cc (1.2),
	permute.cc (1.1): The file my_append.cc renamed to append2.cc A new
	test program permute.cc added.	Makefile.am updated to include
	these tests.

2001-10-17 Wednesday 16:08  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.20), Polyhedron.defs.hh (1.25): Added
	comments of the parameters to some public functions of Polyhedron.

2001-10-17 Wednesday 15:27  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.defs.hh (1.10), Constraint.defs.hh (1.8),
	GenSys.defs.hh (1.13), Polyhedron.defs.hh (1.24): Now, the
	definitions of the variables used in the examples are before the
	examples (they are not inside the examples).

2001-10-17 Wednesday 15:03  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* tests/my_append.cc (1.1): A modified version of append.cc where
	code is structured into two procedures, one for the initial
	polyhedra and one for the fix-point.

2001-10-17 Wednesday 12:55  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.10): Definitions of linearly independent
	and affinely independent improved.

2001-10-17 Wednesday 12:38  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Constraint.defs.hh (1.7), Generator.defs.hh (1.9),
	LinExpression.defs.hh (1.8): Now, "friend" mathods are inside the
	class documentation of these class.  In the "Detail Description" of
	the class LinExpression there is the paragraph "How to build a
	linear expression".

2001-10-17 Wednesday 12:03  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.23): Used "check_not_empty" instead of
	"check_satisfiable" also in the comment of function
	Polyhedron::OK().

2001-10-17 Wednesday 12:01  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.defs.hh (1.9), GenSys.defs.hh (1.12), Matrix.defs.hh
	(1.4), Polyhedron.cc (1.19), Polyhedron.defs.hh (1.22),
	SatMatrix.cc (1.3), SatMatrix.defs.hh (1.5), SatRow.defs.hh (1.4),
	Status.defs.hh (1.4): Changed the comments in the function OK(). 
	In function Polyhedron::OK() used "check_not_empty" instead of
	"check_satisfiable".

2001-10-17 Wednesday 11:05  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.6), ConSys.defs.hh (1.8), GenSys.cc (1.6),
	GenSys.defs.hh (1.11), Polyhedron.cc (1.18), Polyhedron.defs.hh
	(1.21): In function assign_variable and substitute_variable and in
	their comments used "expr" instead of "coefficient".  Used the
	concatenation of two strings in the argument of
	std::invalid_argument(...).

2001-10-17 Wednesday 11:03  Elisa Ricci <ericci@cs.unipr.it>

	* src/Generator.inlines.hh (1.5): Used the concatenation of two
	strings in the argument of std::invalid_argument(...).

2001-10-17 Wednesday 10:14  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.20): Erased the temporary debug
	constructor of a polyhedron.

2001-10-17 Wednesday 09:19  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.5), ConSys.defs.hh (1.7), GenSys.cc (1.5),
	GenSys.defs.hh (1.10), Matrix.cc (1.2), Matrix.defs.hh (1.3),
	Polyhedron.cc (1.17), Polyhedron.defs.hh (1.19), SatMatrix.cc
	(1.2), SatMatrix.defs.hh (1.4), SatRow.cc (1.2), SatRow.defs.hh
	(1.3), Status.cc (1.2), Status.defs.hh (1.3): Now, there is not
	NDEBUG before the function OK.

2001-10-17 Wednesday 07:48  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Integer/: Integer.cc (1.2), Integer.defs.hh (1.2),
	Integer.inlines.hh (1.2), Integer.types.hh (1.2): Integer is now in
	the PPL namespace.

2001-10-17 Wednesday 07:47  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: ConSys.cc (1.4), GenSys.cc (1.4), Generator.inlines.hh
	(1.4), Makefile.am (1.7), Polyhedron.cc (1.16), Row.cc (1.2),
	Row.inlines.hh (1.2): Now Integer and BitSet are in the PPL
	namespace.  Other namespace-related fixes.  Exception strings
	improved.

2001-10-16 Tuesday 19:05  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Constraint.defs.hh (1.6), Generator.defs.hh (1.8): Changed
	the place of the paragraph "How to build ...".	In the comment of
	'Generator operator /=' used std::invalid_argument instead of
	invalid_argument.

2001-10-16 Tuesday 18:59  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.18): Used std::invalid_argument instead
	of invalid_argument in the documentation of exception.

2001-10-16 Tuesday 18:54  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/: definitions.dox (1.9), ppl.sty (1.3): More definitions
	added to ppl.sty.
	
	New definitions used in definitions.dox.  Layout of formula in
	Minkowski's theorem improved.

2001-10-16 Tuesday 18:23  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.defs.hh (1.6), GenSys.defs.hh (1.9), Polyhedron.cc
	(1.15), Polyhedron.defs.hh (1.17), Status.defs.hh (1.2),
	conversion.cc (1.2): Used "\Rset" instead of "\mathbb{R}".

2001-10-16 Tuesday 18:18  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Constraint.defs.hh (1.5), LinExpression.defs.hh (1.7),
	Variable.defs.hh (1.5): Examples on the creation of linear
	expressions and constraints moved to the right place. Comment about
	variable names moved into the definition of the class Variable.

2001-10-16 Tuesday 18:06  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Generator.defs.hh (1.7): The examples on how to build
	generators moved to the right place.

2001-10-16 Tuesday 17:34  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: error1.cc (1.2), error2.cc (1.2): There is no point in
	including print.hh.

2001-10-16 Tuesday 17:33  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/: definitions.dox (1.8), ppl.sty (1.2): Some logic notation
	and "things that hold by definition" added to ppl.sty \mathbb{R}
	replaced by \Rset in definitions.dox

2001-10-16 Tuesday 17:32  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.14), src/Polyhedron.defs.hh (1.16),
	src/Variable.defs.hh (1.4), src/Variable.inlines.hh (1.2),
	tests/append.cc (1.3): The argument of
	Polyhedron::remove_dimensions() has changed again.  Now it is
	remove_dimensions(const std::set<Variable>& to_be_removed).

2001-10-16 Tuesday 17:24  Elisa Ricci <ericci@cs.unipr.it>

	* tests/: Makefile.am (1.11), error2.cc (1.1): Added a test for the
	expception of Polyhedron::assign_variable.

2001-10-16 Tuesday 17:12  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.15): Commented the exception for the
	function assign_variable and substitute_variable.  Now, some
	important puclic function are in the user manual.

2001-10-16 Tuesday 17:10  Elisa Ricci <ericci@cs.unipr.it>

	* src/Generator.defs.hh (1.6): Commented the exception of the
	constructor of a vertex.

2001-10-16 Tuesday 17:09  Elisa Ricci <ericci@cs.unipr.it>

	* src/Generator.inlines.hh (1.3): A line has the inhomogeneus term
	equal to zero (like a ray).

2001-10-16 Tuesday 16:40  Elisa Ricci <ericci@cs.unipr.it>

	* src/GenSys.defs.hh (1.8): Added two examples that show that at
	least a vertex is necessary in a set of generators.

2001-10-16 Tuesday 15:20  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.13): In functions assign_variable and
	substitute_variable tha case of denominator == 0 is considered.

2001-10-16 Tuesday 15:11  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: LinExpression.defs.hh (1.6), Variable.defs.hh (1.3): No
	longer using modules (\ingroup, \addgroup, etc.).

2001-10-16 Tuesday 12:26  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.12): Erased a print.

2001-10-16 Tuesday 12:23  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.3), ConSys.defs.hh (1.5), GenSys.cc (1.3),
	GenSys.defs.hh (1.7): Corrected my previous error.

2001-10-16 Tuesday 12:09  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.11), Polyhedron.defs.hh (1.14): The
	functions assingn_variable and substitute_variable use a Variable
	instead od a size_t and a const LinExpression instead of a
	vector<Integer>.  In this functions, we use a copy of the `coeff'
	to find the inverse transformations.  Changed the example in
	according to these changes.

2001-10-16 Tuesday 12:04  Elisa Ricci <ericci@cs.unipr.it>

	* src/: ConSys.cc (1.2), ConSys.defs.hh (1.4): Now
	substitute_variable uses LinExpression instead of a
	vector<Integer>.

2001-10-16 Tuesday 12:03  Elisa Ricci <ericci@cs.unipr.it>

	* src/: GenSys.cc (1.2), GenSys.defs.hh (1.6): Now
	assign_variable(..) uses an LinExpression instead of a
	vector<Integer>.

2001-10-16 Tuesday 11:59  Elisa Ricci <ericci@cs.unipr.it>

	* src/LinExpression.defs.hh (1.5): Now LinExpression is
	PPL_INTERNAL Row, instead of private Row.

2001-10-16 Tuesday 10:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Generator.inlines.hh (1.2), tests/Makefile.am (1.10),
	tests/error1.cc (1.1): Throw an invalid_argument exception if
	Generator operator /=(const LinExpression& e, const Integer& n) is
	called with n == 0.  New test program error1.cc to test whether
	this situation is correctly handled.

2001-10-16 Tuesday 10:54  Roberto Bagnara <bagnara@cs.unipr.it>

	* README (1.3): New incipit.

2001-10-16 Tuesday 10:53  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: Matrix.defs.hh (1.2), Row.defs.hh (1.2), SatMatrix.defs.hh
	(1.3), SatRow.defs.hh (1.2): All the specializations of the
	std::swap function related to implementation classes are now hidden
	from the user guide.

2001-10-16 Tuesday 10:53  Roberto Bagnara <bagnara@cs.unipr.it>

	* ppl.spec.in (1.5): Summary changed.  Packager also changed in
	view of PGP signatures.

2001-10-16 Tuesday 10:20  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.13): The parameter name of the
	"default" constructor for Polyhedron is `kind'.  Hal the comment
	was using a different parameter name (`full').

2001-10-16 Tuesday 10:15  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/GenSys.defs.hh (1.5): In the examples, replaced "\=" by "/=".

2001-10-16 Tuesday 10:13  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Generator.defs.hh (1.5): In the examples for defining
	vectors, all "\=" replaced by "/=".

2001-10-16 Tuesday 08:31  Roberto Bagnara <bagnara@cs.unipr.it>

	* ppl.lsm.in (1.2), src/Polyhedron.cc (1.10),
	src/Polyhedron.defs.hh (1.12), tests/append.cc (1.2): New interface
	for remove_dimensions(const std::vector<unsigned int>&
	to_be_removed).  Note: BitSet is an implementation detail that
	should not surface in the API.

2001-10-16 Tuesday 07:38  Roberto Bagnara <bagnara@cs.unipr.it>

	* ppl.spec.in (1.4): First attempt at the LSM (Linux Software Map)
	entry form.

2001-10-15 Monday 20:15  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.9), append.cc (1.1): A first at the
	append's analysis test.

2001-10-15 Monday 20:15  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/randchull1.cc (1.4): Do less work.

2001-10-15 Monday 20:14  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/empty1.cc (1.2): Must return an int, not a bool.

2001-10-15 Monday 18:35  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.9): Erased the "assert(OK())" from the
	function Polyhedron::insert(const Generator&): after an insertion
	of a generator the polyhedron can be not OK.

2001-10-15 Monday 18:24  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.11): Added a new example to show the
	use of the function Polyhedron::insert(...).

2001-10-15 Monday 18:13  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.8), src/Polyhedron.defs.hh (1.10),
	tests/Makefile.am (1.8), tests/empty1.cc (1.1): It is not possible
	to overload bool and unsigned int.  New enumeration Degenerate_Kind
	added with vales ZERO_DIMENSIONAL and EMPTY.  The constructor
	Polyhedron(Degenerate_Kind kind = ZERO_DIMENSIONAL) does the
	expected thing.  The program empty1.cc exemplifies two methods of
	obtaining an empty polyhedron.

2001-10-15 Monday 18:09  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/Makefile.am (1.9): ppl.sty must also be distributed.

2001-10-15 Monday 17:14  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.7), Polyhedron.defs.hh (1.9): Now the
	default constructor of a polyhedron has a default argument.  If
	`full' is false, it builds an empty polyhedron (it has the flag set
	to empty); otherwise, if it has the default value (i.e. true), it
	bulids a zero-dimensional polyhedron.

2001-10-15 Monday 16:44  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.6): If we build a polyhedron starting from a
	matrix of generators with no rows the polyhedron is empty.

2001-10-15 Monday 16:15  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/Makefile.am (1.8): Use an absolute path for adding to
	TEXINPUTS.

2001-10-15 Monday 15:40  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: .cvsignore (1.3), Integer/.cvsignore (1.1),
	Integer/Integer.cc (1.1), Integer/Integer.defs.hh (1.1),
	Integer/Integer.inlines.hh (1.1), Integer/Integer.types.hh (1.1),
	Integer/Makefile.am (1.1): Here is the Integer class again.

2001-10-15 Monday 15:40  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.inlines.hh (1.2): Multiple inclusion guard added.

2001-10-15 Monday 15:20  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.5): In the constructors of a polyhedron that
	use a system of constraints or a set of generators these matrices
	must be at least two columns.  In the function
	remove_dimensions(..) if the matrix of generators does not have at
	least two columns (i.e num_columns() <= 1) the polyhedron becomes
	zero-dimensional and so we clear the `con_sys' and `gen_sys'.  In
	function insert(const Constraint& c) if the polyhedron is
	zero-dimensional we add also the positivity constraint.  In
	functions insert(...) it is no longer necessary clear `con_sys' and
	`gen_sys' before adding a row if the polyhedron is
	zero-dimensional.  In function OK(), we verify if in a
	zero-dimensional polyhedron `con_sys' and `gen_sys' have no rows.

2001-10-15 Monday 15:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: Makefile.am (1.7), devref-browse.doxyconf-latex.in (1.4),
	devref-print.doxyconf-latex.in (1.4), devref.doxyconf-html.in
	(1.5), devref.tex (1.4), ppl.sty (1.1),
	user-browse.doxyconf-latex.in (1.4), user-print.doxyconf-latex.in
	(1.4), user.doxyconf-html.in (1.6), user.tex (1.5): New LaTeX
	commands can now be defined in ppl.sty and then freely used in the
	doxygen and LaTeX sources.  This works also when producing HTML
	pages.

2001-10-15 Monday 13:59  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.8): Rewrite a part of the brief
	description of the class Polyhedron.  Added some more expanation
	for the examples 5 and 6.

2001-10-15 Monday 12:19  Elisa Ricci <ericci@cs.unipr.it>

	* src/SatMatrix.defs.hh (1.2): Added a briefly description for the
	saturation matrix.

2001-10-15 Monday 11:59  Roberto Bagnara <bagnara@cs.unipr.it>

	* ppl.spec.in (1.3): Now we build a relocatable package.

2001-10-15 Monday 11:34  Roberto Bagnara <bagnara@cs.unipr.it>

	* ppl.spec.in (1.2): A first cut at a working RPM spec file.

2001-10-15 Monday 09:37  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Makefile.am (1.6): It is now possible for the build directory
	to be the same as the source directory.

2001-10-14 Sunday 22:32  Roberto Bagnara <bagnara@cs.unipr.it>

	* INSTALL (1.2), missing (1.2), mkinstalldirs (1.3): Updated.

2001-10-14 Sunday 21:28  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.8), configure.ac (1.3), doc/Makefile.am (1.6),
	m4/Makefile.am (1.2), src/Makefile.am (1.5), tests/Makefile.am
	(1.7): Several packaging bugs have been fixed: now `make distcheck'
	is OK.

2001-10-14 Sunday 21:26  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: devref-browse.doxyconf-latex.in (1.3),
	devref-print.doxyconf-latex.in (1.3), devref.doxyconf-html.in
	(1.4), user-browse.doxyconf-latex.in (1.3),
	user-print.doxyconf-latex.in (1.3), user.doxyconf-html.in (1.5):
	The sysdep directory does not exist anymore.

2001-10-14 Sunday 14:03  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.7), doc/Makefile.am (1.5), doc/definitions.dox
	(1.7), doc/devref-browse.doxyconf-latex.in (1.2),
	doc/devref-print.doxyconf-latex.in (1.2),
	doc/devref.doxyconf-html.in (1.3), doc/fdl.dox (1.1), doc/fdl.tex
	(1.1), doc/gfdl.dox (1.2), doc/gpl.tex (1.1), doc/gpl.texi (1.2),
	doc/gpl.texinfo (1.2), doc/texinfo.tex (1.2),
	doc/user-browse.doxyconf-latex.in (1.2),
	doc/user-print.doxyconf-latex.in (1.2), doc/user.doxyconf-html.in
	(1.4): Documentation reorganized.

2001-10-14 Sunday 11:46  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.cc (1.4): In functions Polyhedron::insert(const
	Constraint& c) e Polyhedron::insert(const Constraint& c) the case
	of a zero-dimensional polyhedron is considered.

2001-10-13 Saturday 21:16  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/Polyhedra.texinfo (1.3): Was never meant to be here.

2001-10-13 Saturday 19:06  Roberto Bagnara <bagnara@cs.unipr.it>

	* config.h.in (1.4), configure.ac (1.2): Configuration fixed in
	various respects.
	
	Please note that:
	
	- debugging (-g) is ON by default; - standard optimization (-O2) is
	THE default; - run-time assertions are OFF by default.

2001-10-13 Saturday 19:04  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Makefile.am (1.4), ppl.cc (1.2), protect.sed (1.2),
	restore.sed (1.2): Generation of libppl.a and ppl.hh fixed.

2001-10-13 Saturday 19:03  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.6), inters1.cc (1.3), inters2.cc (1.3),
	randchull1.cc (1.3): Programs using the PPL need only include
	ppl.hh.

2001-10-13 Saturday 19:01  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Polyhedron.cc (1.3), tests/randchull1.cc (1.2): It is now
	possible to insert a generator into an empty polyhedron.

2001-10-13 Saturday 16:37  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.6), acconfig.h (1.2), acinclude.m4 (1.1),
	config.guess (1.2), config.h.in (1.3), config.sub (1.2),
	configure.ac (1.1), configure.in (1.5), doc/Makefile.am (1.4),
	m4/.cvsignore (1.1), src/Makefile.am (1.3), tests/Makefile.am
	(1.5): Upgraded to newer versions of autoconf.	Use the new checks
	for detecting GMP.

2001-10-13 Saturday 12:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.5), m4/Makefile.am (1.1),
	m4/ac_check_gmp_exceptions.m4 (1.1), m4/ac_check_have_gmp.m4 (1.1):
	New tests to check whether GMP is installed and, if so, whether it
	was compiled with -fexceptions.

2001-10-13 Saturday 10:56  Roberto Bagnara <bagnara@cs.unipr.it>

	* .cvsignore (1.4), Makefile.am (1.4), Makefile.in (1.4),
	aclocal.m4 (1.2), configure (1.5), stamp-h.in (1.2), doc/.cvsignore
	(1.1), doc/Makefile.am (1.3), doc/Makefile.in (1.3), src/.cvsignore
	(1.2), src/Makefile.in (1.3), tests/.cvsignore (1.1),
	tests/Makefile.in (1.5): Automatically generated  files should not
	be in the repository and their presence in the directory structure
	should be ignored.

2001-10-12 Friday 22:27  Roberto Bagnara <bagnara@cs.unipr.it>

	* configure (1.4), configure.in (1.4), doc/Makefile.am (1.2),
	doc/Makefile.in (1.2), doc/devref-browse.doxyconf-latex.in (1.1),
	doc/devref-print.doxyconf-latex.in (1.1),
	doc/devref.doxyconf-pdf.in (1.3), doc/devref.tex (1.3),
	doc/user-browse.doxyconf-latex.in (1.1),
	doc/user-print.doxyconf-latex.in (1.1), doc/user.doxyconf-pdf.in
	(1.4), doc/user.tex (1.4): Several improvements to the
	documentation.	We now produce docs for printing and docs for
	browsing

2001-10-12 Friday 18:07  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: devref.doxyconf-html.in (1.2), devref.doxyconf-pdf.in
	(1.2), user.doxyconf-html.in (1.3), user.doxyconf-pdf.in (1.3),
	user.tex (1.3): The project name is "Parma Polyhedra Library",
	"PPL" for short.

2001-10-12 Friday 18:01  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.4), Makefile.in (1.4), randchull1.cc
	(1.1): New test computing convex-hulls of random polytopes.

2001-10-12 Friday 17:19  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.6): Title of document changed.  Sections
	changed so that there are two sections, an introduction to
	polyhedra and a more advanced section which talks about the PPL
	implementation.  Comment about vertices differing from rays only in
	the n+1'th  term moved to before "Valid linear inequalities"
	paragraph.

2001-10-12 Friday 17:09  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/: Makefile.am (1.2), Makefile.in (1.2): Header file ppl.hh is
	now guarded against multiple inclusion.

2001-10-12 Friday 17:08  Roberto Bagnara <bagnara@cs.unipr.it>

	* src/Generator.cc (1.2): Bug fixed: a vertex in the origin was
	printed as "v()" instead of "v(0)".

2001-10-12 Friday 16:51  Elisa Ricci <ericci@cs.unipr.it>

	* src/: Polyhedron.cc (1.2), Polyhedron.defs.hh (1.7): Added the
	function Polyhedron::insert(const Generator& g).

2001-10-12 Friday 16:36  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.6): Added other two examples: one is
	for the use of assign_variable(...) and the other is for the use of
	substitute_variable(...).

2001-10-12 Friday 15:44  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.5): Corrected a my error: to build a
	vertex "/=" is needed instead of "\=".

2001-10-12 Friday 15:12  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.4): Added two examples to the comment:
	one to specify the use of add_dimensions_and_embed(..) and the
	other to specify the use of add_dimensions_and_project(...). 
	Corrected an error in a formula: now in the comment of
	convex_hull(...) and convex_hull_lazy(..) there is \f$\cup\f$
	instead of \f$\union\f$ (that caused an error in Latex).

2001-10-12 Friday 15:07  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/inters2.cc (1.2): Fixed and extended.

2001-10-12 Friday 14:20  Roberto Bagnara <bagnara@cs.unipr.it>

	* tests/: Makefile.am (1.3), Makefile.in (1.3), inters1.cc (1.2),
	inters2.cc (1.1), print.hh (1.1): print.hh contains functions that
	are useful for printing polyhedra.  inters1.cc improved.  New test
	inters2.cc computing the intersection of a pyramid with an
	half-space of variable height, then counting the number of vertices
	of the resulting polytope (the empty polyhedron, a proper frustum,
	or a singleton).

2001-10-12 Friday 13:20  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.5): Section on the "equivalence of
	homogeneous and inhomogeneous systems" (up to the paragraph called
	"Valid linear inequalities") changed and reworded.  Title of
	section changed to "Homogeneous systems".

2001-10-12 Friday 10:04  Roberto Bagnara <bagnara@cs.unipr.it>

	* README (1.2), doc/Polyhedra.texinfo (1.2), tests/Makefile.am
	(1.2), tests/Makefile.in (1.2): Bump copyright year.

2001-10-12 Friday 09:55  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.3), Makefile.in (1.3), config.h.in (1.2),
	configure (1.3), configure.in (1.3), tests/Makefile.am (1.1),
	tests/Makefile.in (1.1), tests/inters1.cc (1.1): Infrastructure for
	the tests directory and `make check'.  inters1.cc is a first
	example of how test programs could be written.

2001-10-11 Thursday 17:37  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.3): Added a backslash to mathbb in the
	second example.  Removing empty lines that were causing Examples 1
	and 2 to end prematurely.

2001-10-11 Thursday 17:00  Elisa Ricci <ericci@cs.unipr.it>

	* src/Polyhedron.defs.hh (1.2): Added two examples to the comment:
	one is for the construction of a square using the constraints and
	the generators. The other is for the construction of an half-strip
	using the constraints and the generators.

2001-10-11 Thursday 16:57  Elisa Ricci <ericci@cs.unipr.it>

	* src/GenSys.defs.hh (1.4): Added another example for the
	construction of a set of generators (it builds an half-strip).

2001-10-11 Thursday 16:56  Elisa Ricci <ericci@cs.unipr.it>

	* src/ConSys.defs.hh (1.3): Added another example for the
	constraction of a system of constraints (it builds an half-strip).

2001-10-11 Thursday 16:41  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.4): The paragraph "The Minkowski's
	theorem" renamed to   "Minkowski's theorem.  The condition "rank(A)
	= n" changed to   "where A is a matrix of rank n".  The note
	following the definition is reworded so that the   conditions are
	not bracketed.	"Linear equalities and inequalities" has been  
	changed to "constraints".  "positive multiples of each inequality
	and ray" has been    changed to "positive multiples of each
	constraint and ray".  The word "the" inserted where necessary.
	
	The paragraph "The Weil's theorem" renamed to "Weil's theorem.

2001-10-11 Thursday 16:07  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Constraint.defs.hh (1.4): In the examples, variable "cs"
	renamed into "inequal" and "equal".

2001-10-11 Thursday 15:49  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.3): In the definition of rays:  P is
	defined before P_0;  A and b are defined;  inserted "any point"
	before r; The comment that a ray is the direction in which P is
	infinite, moved from within the statement of the proposition to
	before the proposition and reworded.
	
	In the definition of lines, wording improved.  Comment relating
	opposite rays with lines made into a separate paragraph. It is not
	part of the definition.

2001-10-11 Thursday 14:38  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/LinExpression.defs.hh (1.4): In the first two examples,
	variable z now has index 2 (using index 5 was correct, but a bit
	misleading).

2001-10-11 Thursday 14:33  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Generator.defs.hh (1.4): IN the first example, variable "g"
	renamed as "line".

2001-10-11 Thursday 14:32  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/Generator.defs.hh (1.3): Examples modified:  - using more
	meaningful names (line, ray and vertex) for Generator variables;  -
	explained that the first argument of operators | and ^ is
	meaningless;  - explained how to use the second argument of /= to
	obtain vertices    with non-integral coefficients.

2001-10-11 Thursday 14:28  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/GenSys.defs.hh (1.3): In the first example, Variable y(0)
	changed in Variable y(1) to avoid dimension clash with Variable
	x(0).  In the second example, the computation of the past-the-end
	iterator moved outside the for-loop.

2001-10-11 Thursday 13:53  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: ConSys.defs.hh (1.2), Constraint.defs.hh (1.3),
	Constraint.inlines.hh (1.2): Friend members building a constraint
	using operators < and > removed.  Example changed accordingly.	In
	the example on the use of iterators for ConSys, the past-the-end
	iterator is now computed only once before the for-loop.

2001-10-11 Thursday 13:49  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: user.doxyconf-html.in (1.2), user.doxyconf-pdf.in (1.2): Do
	not show inheritance graphs or diagrams.  Do not show a thousands
	times that the only PPL header file is ppl.hh.

2001-10-11 Thursday 13:44  Roberto Bagnara <bagnara@cs.unipr.it>

	* doc/: devref.tex (1.2), user.tex (1.2): Tatiana's email address
	fixed.	Better titles.

2001-10-11 Thursday 13:03  Patricia M. Hill <hill@comp.leeds.ac.uk>

	* doc/definitions.dox (1.2): In the definition of the combinations,
	the p_1,...,p_k are changed to x_1,...,x_k.  In the definition of
	scalar product: "vector" is changed to "vectors".  In the
	definition of polyhedra there are a number of changes to notation,
	the definitions of the notation and to the wording.

2001-10-11 Thursday 12:38  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/: LinExpression.defs.hh (1.3), Variable.defs.hh (1.2): Some
	errors (just introduced by me) removed.  Methods of class Variable
	added to group LinExpression.

2001-10-11 Thursday 12:00  Enea Zaffanella <zaffanella@cs.unipr.it>

	* src/LinExpression.defs.hh (1.2): A few changes in the example.

2001-10-11 Thursday 11:22  Elisa Ricci <ericci@cs.unipr.it>

	* src/Generator.defs.hh (1.2): Added three examples: one for the
	construction of a line, one for the construction of a ray and the
	other for the construction of a vertex.

2001-10-11 Thursday 11:19  Elisa Ricci <ericci@cs.unipr.it>

	* src/GenSys.defs.hh (1.2): Added an example in the comment: it is
	useful to specify the construction of a set of generators.

2001-10-11 Thursday 11:16  Elisa Ricci <ericci@cs.unipr.it>

	* src/Constraint.defs.hh (1.2): Added two examples in the comment:
	one for the building of an inequality and the other for the
	building of an equality.

2001-10-11 Thursday 08:39  Roberto Bagnara <bagnara@cs.unipr.it>

	* Makefile.am (1.2), Makefile.in (1.2), configure (1.2),
	configure.in (1.2): Disable the test directory.

2001-10-11 Thursday 08:33  Roberto Bagnara <bagnara@cs.unipr.it>

	* .cvsignore (1.3), src/.cvsignore (1.1): My mistake: BitSet and
	Integer are subdirectories of src.

2001-10-11 Thursday 08:29  Roberto Bagnara <bagnara@cs.unipr.it>

	* .cvsignore (1.2): Ignore the BitSet and Integer subdirectories:
	they must be here and must be ignored by CVS.

2001-10-10 Wednesday 21:50  Roberto Bagnara <bagnara@cs.unipr.it>

	* mkinstalldirs (1.2): $Id tag removed.

2001-10-10 Wednesday 21:45  Roberto Bagnara <bagnara@cs.unipr.it>

	* .cvsignore (1.1), AUTHORS (1.1), COPYING (1.1), ChangeLog (1.1),
	INSTALL (1.1), Makefile.am (1.1), Makefile.in (1.1), NEWS (1.1),
	README (1.1), TODO (1.1), acconfig.h (1.1), aclocal.m4 (1.1),
	config.guess (1.1), config.h.in (1.1), config.sub (1.1), configure
	(1.1), configure.in (1.1), depcomp (1.1), install-sh (1.1), missing
	(1.1), mkinstalldirs (1.1), ppl.lsm.in (1.1), ppl.spec.in (1.1),
	stamp-h.in (1.1), doc/Makefile.am (1.1), doc/Makefile.in (1.1),
	doc/Polyhedra.texinfo (1.1), doc/definitions.dox (1.1),
	doc/devref.doxyconf-html.in (1.1), doc/devref.doxyconf-pdf.in
	(1.1), doc/devref.tex (1.1), doc/gfdl.dox (1.1), doc/gpl.dox (1.1),
	doc/gpl.texi (1.1), doc/gpl.texinfo (1.1), doc/texinfo.tex (1.1),
	doc/user.doxyconf-html.in (1.1), doc/user.doxyconf-pdf.in (1.1),
	doc/user.tex (1.1), src/ConSys.cc (1.1), src/ConSys.defs.hh (1.1),
	src/ConSys.inlines.hh (1.1), src/ConSys.types.hh (1.1),
	src/Constraint.cc (1.1), src/Constraint.defs.hh (1.1),
	src/Constraint.inlines.hh (1.1), src/Constraint.types.hh (1.1),
	src/GenSys.cc (1.1), src/GenSys.defs.hh (1.1),
	src/GenSys.inlines.hh (1.1), src/GenSys.types.hh (1.1),
	src/Generator.cc (1.1), src/Generator.defs.hh (1.1),
	src/Generator.inlines.hh (1.1), src/Generator.types.hh (1.1),
	src/LinExpression.cc (1.1), src/LinExpression.defs.hh (1.1),
	src/LinExpression.inlines.hh (1.1), src/LinExpression.types.hh
	(1.1), src/Makefile.am (1.1), src/Makefile.in (1.1), src/Matrix.cc
	(1.1), src/Matrix.defs.hh (1.1), src/Matrix.inlines.hh (1.1),
	src/Matrix.types.hh (1.1), src/Polyhedron.cc (1.1),
	src/Polyhedron.defs.hh (1.1), src/Polyhedron.inlines.hh (1.1),
	src/Polyhedron.types.hh (1.1), src/Row.cc (1.1), src/Row.defs.hh
	(1.1), src/Row.inlines.hh (1.1), src/Row.types.hh (1.1),
	src/SatMatrix.cc (1.1), src/SatMatrix.defs.hh (1.1),
	src/SatMatrix.inlines.hh (1.1), src/SatMatrix.types.hh (1.1),
	src/SatRow.cc (1.1), src/SatRow.defs.hh (1.1),
	src/SatRow.inlines.hh (1.1), src/SatRow.types.hh (1.1),
	src/Status.cc (1.1), src/Status.defs.hh (1.1),
	src/Status.inlines.hh (1.1), src/Status.types.hh (1.1),
	src/Variable.cc (1.1), src/Variable.defs.hh (1.1),
	src/Variable.inlines.hh (1.1), src/Variable.types.hh (1.1),
	src/conversion.cc (1.1), src/globals.cc (1.1), src/globals.hh
	(1.1), src/maxmin.hh (1.1), src/minimize.cc (1.1), src/ppl.cc
	(1.1), src/protect.sed (1.1), src/restore.sed (1.1),
	src/simplify.cc (1.1): Initial revision

2001-10-10 Wednesday 21:45  Roberto Bagnara <bagnara@cs.unipr.it>

	* .cvsignore (1.1.1.1), AUTHORS (1.1.1.1), COPYING (1.1.1.1),
	ChangeLog (1.1.1.1), INSTALL (1.1.1.1), Makefile.am (1.1.1.1),
	Makefile.in (1.1.1.1), NEWS (1.1.1.1), README (1.1.1.1), TODO
	(1.1.1.1), acconfig.h (1.1.1.1), aclocal.m4 (1.1.1.1), config.guess
	(1.1.1.1), config.h.in (1.1.1.1), config.sub (1.1.1.1), configure
	(1.1.1.1), configure.in (1.1.1.1), depcomp (1.1.1.1), install-sh
	(1.1.1.1), missing (1.1.1.1), mkinstalldirs (1.1.1.1), ppl.lsm.in
	(1.1.1.1), ppl.spec.in (1.1.1.1), stamp-h.in (1.1.1.1),
	doc/Makefile.am (1.1.1.1), doc/Makefile.in (1.1.1.1),
	doc/Polyhedra.texinfo (1.1.1.1), doc/definitions.dox (1.1.1.1),
	doc/devref.doxyconf-html.in (1.1.1.1), doc/devref.doxyconf-pdf.in
	(1.1.1.1), doc/devref.tex (1.1.1.1), doc/gfdl.dox (1.1.1.1),
	doc/gpl.dox (1.1.1.1), doc/gpl.texi (1.1.1.1), doc/gpl.texinfo
	(1.1.1.1), doc/texinfo.tex (1.1.1.1), doc/user.doxyconf-html.in
	(1.1.1.1), doc/user.doxyconf-pdf.in (1.1.1.1), doc/user.tex
	(1.1.1.1), src/ConSys.cc (1.1.1.1), src/ConSys.defs.hh (1.1.1.1),
	src/ConSys.inlines.hh (1.1.1.1), src/ConSys.types.hh (1.1.1.1),
	src/Constraint.cc (1.1.1.1), src/Constraint.defs.hh (1.1.1.1),
	src/Constraint.inlines.hh (1.1.1.1), src/Constraint.types.hh
	(1.1.1.1), src/GenSys.cc (1.1.1.1), src/GenSys.defs.hh (1.1.1.1),
	src/GenSys.inlines.hh (1.1.1.1), src/GenSys.types.hh (1.1.1.1),
	src/Generator.cc (1.1.1.1), src/Generator.defs.hh (1.1.1.1),
	src/Generator.inlines.hh (1.1.1.1), src/Generator.types.hh
	(1.1.1.1), src/LinExpression.cc (1.1.1.1),
	src/LinExpression.defs.hh (1.1.1.1), src/LinExpression.inlines.hh
	(1.1.1.1), src/LinExpression.types.hh (1.1.1.1), src/Makefile.am
	(1.1.1.1), src/Makefile.in (1.1.1.1), src/Matrix.cc (1.1.1.1),
	src/Matrix.defs.hh (1.1.1.1), src/Matrix.inlines.hh (1.1.1.1),
	src/Matrix.types.hh (1.1.1.1), src/Polyhedron.cc (1.1.1.1),
	src/Polyhedron.defs.hh (1.1.1.1), src/Polyhedron.inlines.hh
	(1.1.1.1), src/Polyhedron.types.hh (1.1.1.1), src/Row.cc (1.1.1.1),
	src/Row.defs.hh (1.1.1.1), src/Row.inlines.hh (1.1.1.1),
	src/Row.types.hh (1.1.1.1), src/SatMatrix.cc (1.1.1.1),
	src/SatMatrix.defs.hh (1.1.1.1), src/SatMatrix.inlines.hh
	(1.1.1.1), src/SatMatrix.types.hh (1.1.1.1), src/SatRow.cc
	(1.1.1.1), src/SatRow.defs.hh (1.1.1.1), src/SatRow.inlines.hh
	(1.1.1.1), src/SatRow.types.hh (1.1.1.1), src/Status.cc (1.1.1.1),
	src/Status.defs.hh (1.1.1.1), src/Status.inlines.hh (1.1.1.1),
	src/Status.types.hh (1.1.1.1), src/Variable.cc (1.1.1.1),
	src/Variable.defs.hh (1.1.1.1), src/Variable.inlines.hh (1.1.1.1),
	src/Variable.types.hh (1.1.1.1), src/conversion.cc (1.1.1.1),
	src/globals.cc (1.1.1.1), src/globals.hh (1.1.1.1), src/maxmin.hh
	(1.1.1.1), src/minimize.cc (1.1.1.1), src/ppl.cc (1.1.1.1),
	src/protect.sed (1.1.1.1), src/restore.sed (1.1.1.1),
	src/simplify.cc (1.1.1.1): Imported into the new repository.

