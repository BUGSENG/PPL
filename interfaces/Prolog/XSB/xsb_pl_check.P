/* Prolog main program for the PPL/XSB-Prolog predicate checker.
   Copyright (C) 2001-2004 Roberto Bagnara <bagnara@cs.unipr.it>

This file is part of the Parma Polyhedra Library (PPL).

The PPL is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

The PPL is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
USA.

For the most up-to-date information see the Parma Polyhedra Library
site: http://www.cs.unipr.it/ppl/ . */

:- compiler_options([xpp_on]).
:- import xpp_include_dir/1 from parse.
:- assert(xpp_include_dir('.')).

:- import append/3, length/2, member/2 from basics.
:- import
	ppl_version_major/1,
	ppl_version_minor/1,
	ppl_version_revision/1,
	ppl_version_beta/1,
	ppl_version/1,
	ppl_banner/1,
	ppl_max_space_dimension/1,
	ppl_initialize/0,
	ppl_finalize/0,
	ppl_set_timeout_exception_atom/1,
	ppl_timeout_exception_atom/1,
	ppl_set_timeout/1,
	ppl_reset_timeout/0,
	ppl_new_Polyhedron_from_dimension/3,
	ppl_new_Polyhedron_empty_from_dimension/3,
	ppl_new_Polyhedron_from_Polyhedron/4,
	ppl_new_Polyhedron_from_constraints/3,
	ppl_new_Polyhedron_from_generators/3,
	ppl_new_Polyhedron_from_bounding_box/3,
	ppl_Polyhedron_swap/2,
	ppl_delete_Polyhedron/1,
	ppl_Polyhedron_space_dimension/2,
	ppl_Polyhedron_get_constraints/2,
	ppl_Polyhedron_get_minimized_constraints/2,
	ppl_Polyhedron_get_generators/2,
	ppl_Polyhedron_get_minimized_generators/2,
	ppl_Polyhedron_relation_with_constraint/3,
	ppl_Polyhedron_relation_with_generator/3,
        ppl_Polyhedron_get_bounding_box/3,
	ppl_Polyhedron_is_empty/1,
	ppl_Polyhedron_is_universe/1,
	ppl_Polyhedron_is_bounded/1,
	ppl_Polyhedron_bounds_from_above/2,
	ppl_Polyhedron_bounds_from_below/2,
	ppl_Polyhedron_maximize/5,
	ppl_Polyhedron_maximize_with_point/6,
	ppl_Polyhedron_minimize/5,
	ppl_Polyhedron_minimize_with_point/6,
        ppl_Polyhedron_is_topologically_closed/1,
	ppl_Polyhedron_contains_Polyhedron/2,
	ppl_Polyhedron_strictly_contains_Polyhedron/2,
	ppl_Polyhedron_is_disjoint_from_Polyhedron/2,
        ppl_Polyhedron_equals_Polyhedron/2,
	ppl_Polyhedron_OK/1,
	ppl_Polyhedron_add_constraint/2,
	ppl_Polyhedron_add_constraint_and_minimize/2,
	ppl_Polyhedron_add_generator/2,
	ppl_Polyhedron_add_generator_and_minimize/2,
	ppl_Polyhedron_add_constraints/2,
	ppl_Polyhedron_add_constraints_and_minimize/2,
	ppl_Polyhedron_add_generators/2,
	ppl_Polyhedron_add_generators_and_minimize/2,
	ppl_Polyhedron_intersection_assign/2,
	ppl_Polyhedron_intersection_assign_and_minimize/2,
	ppl_Polyhedron_poly_hull_assign/2,
	ppl_Polyhedron_poly_hull_assign_and_minimize/2,
	ppl_Polyhedron_poly_difference_assign/2,
	ppl_Polyhedron_affine_image/4,
	ppl_Polyhedron_affine_preimage/4,
	ppl_Polyhedron_generalized_affine_image/5,
	ppl_Polyhedron_generalized_affine_image_lhs_rhs/4,
	ppl_Polyhedron_time_elapse_assign/2,
        ppl_Polyhedron_topological_closure_assign/1,
	ppl_Polyhedron_BHRZ03_widening_assign_with_token/3,
	ppl_Polyhedron_BHRZ03_widening_assign/2,
	ppl_Polyhedron_limited_BHRZ03_extrapolation_assign_with_token/4,
	ppl_Polyhedron_limited_BHRZ03_extrapolation_assign/3,
	ppl_Polyhedron_bounded_BHRZ03_extrapolation_assign_with_token/4,
	ppl_Polyhedron_bounded_BHRZ03_extrapolation_assign/3,
	ppl_Polyhedron_H79_widening_assign_with_token/3,
	ppl_Polyhedron_H79_widening_assign/2,
	ppl_Polyhedron_limited_H79_extrapolation_assign_with_token/4,
	ppl_Polyhedron_limited_H79_extrapolation_assign/3,
	ppl_Polyhedron_bounded_H79_extrapolation_assign_with_token/4,
	ppl_Polyhedron_bounded_H79_extrapolation_assign/3,
	ppl_Polyhedron_add_dimensions_and_project/2,
	ppl_Polyhedron_add_dimensions_and_embed/2,
	ppl_Polyhedron_concatenate_assign/2,
	ppl_Polyhedron_remove_dimensions/2,
	ppl_Polyhedron_remove_higher_dimensions/2,
	ppl_Polyhedron_expand_dimension/3,
	ppl_Polyhedron_map_dimensions/2
   from ppl_xsb.

:- [ppl_xsb].

/*
  FIXME: the following kludge is due to the fact that XSB versions up
  to and including 2.6 do not seem to support current_prolog_flag/2.
  With this hack we are able to test the Prolog interface exceptions
  when converting PPL integers to XSB-Prolog integer terms.
*/
current_prolog_flag(bounded, true).

/*
  FIXME: these seem to be the values on IA32 but, who knows on other
  architectures?
*/
current_prolog_flag(min_integer, -268435456).
current_prolog_flag(max_integer, 268435455).

#define user_input user
#include "pl_check.pl"

main :-
    (check_all ->
        write('OK')
    ;
        write('FAILURE')
    ),
    nl.

:- main.
